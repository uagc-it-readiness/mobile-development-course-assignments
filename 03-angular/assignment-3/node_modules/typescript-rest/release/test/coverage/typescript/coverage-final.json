{
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/typescript-rest.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/typescript-rest.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":14}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":14}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"12":{"start":{"line":18,"column":0},"end":{"line":29,"column":1}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":46}},"14":{"start":{"line":20,"column":4},"end":{"line":28,"column":5}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":24}},"16":{"start":{"line":22,"column":11},"end":{"line":28,"column":5}},"17":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":84}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":62}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":54}}},"fnMap":{},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":0},"end":{"line":18,"column":-1}},{"start":{"line":18,"column":0},"end":{"line":18,"column":-1}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":3}},{"start":{"line":20,"column":4},"end":{"line":20,"column":3}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":10}},{"start":{"line":22,"column":11},"end":{"line":22,"column":10}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":7}},{"start":{"line":23,"column":8},"end":{"line":23,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{},"code":"\"use strict\";\n\nimport * as path from \"path\";\nimport * as fs from \"fs-extra\";\n\nimport * as Errors from \"./server-errors\";\nimport * as Return from \"./server-return\";\nimport {Server} from \"./server\";\n\nexport * from \"./decorators\";\nexport * from \"./server-types\";\nexport * from \"./server\";\n\nexport {Return};\nexport {Errors};\n\nconst CONFIG_FILE = path.join(process.cwd(), 'rest.config');\nif (fs.existsSync(CONFIG_FILE)) {\n    let config = fs.readJSONSync(CONFIG_FILE);\n    if (config.useIoC) {\n        Server.useIoC();\n    } else if (config.serviceFactory) {\n        if (config.serviceFactory.indexOf('.') === 0) {\n            config.serviceFactory = path.join(process.cwd(), config.serviceFactory);\n        }\n        const serviceFactory = require(config.serviceFactory);\n        Server.registerServiceFactory(serviceFactory);\n    }\n}","l":{"3":1,"4":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"14":1,"15":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-errors.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-errors.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":10,"column":0},"end":{"line":15,"column":1}},"3":{"start":{"line":10,"column":37},"end":{"line":10,"column":46}},"4":{"start":{"line":11,"column":1},"end":{"line":14,"column":2}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":60}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":1}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":28}},"8":{"start":{"line":22,"column":0},"end":{"line":27,"column":1}},"9":{"start":{"line":22,"column":39},"end":{"line":22,"column":48}},"10":{"start":{"line":23,"column":1},"end":{"line":26,"column":2}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":62}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":1}},"13":{"start":{"line":22,"column":13},"end":{"line":22,"column":30}},"14":{"start":{"line":33,"column":0},"end":{"line":40,"column":1}},"15":{"start":{"line":33,"column":35},"end":{"line":33,"column":44}},"16":{"start":{"line":34,"column":1},"end":{"line":39,"column":2}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":58}},"18":{"start":{"line":40,"column":0},"end":{"line":40,"column":1}},"19":{"start":{"line":33,"column":13},"end":{"line":33,"column":26}},"20":{"start":{"line":53,"column":0},"end":{"line":58,"column":1}},"21":{"start":{"line":53,"column":35},"end":{"line":53,"column":44}},"22":{"start":{"line":54,"column":1},"end":{"line":57,"column":2}},"23":{"start":{"line":56,"column":2},"end":{"line":56,"column":58}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":1}},"25":{"start":{"line":53,"column":13},"end":{"line":53,"column":26}},"26":{"start":{"line":65,"column":0},"end":{"line":70,"column":1}},"27":{"start":{"line":65,"column":43},"end":{"line":65,"column":52}},"28":{"start":{"line":66,"column":1},"end":{"line":69,"column":2}},"29":{"start":{"line":68,"column":2},"end":{"line":68,"column":66}},"30":{"start":{"line":70,"column":0},"end":{"line":70,"column":1}},"31":{"start":{"line":65,"column":13},"end":{"line":65,"column":34}},"32":{"start":{"line":77,"column":0},"end":{"line":82,"column":1}},"33":{"start":{"line":77,"column":40},"end":{"line":77,"column":49}},"34":{"start":{"line":78,"column":1},"end":{"line":81,"column":2}},"35":{"start":{"line":80,"column":2},"end":{"line":80,"column":63}},"36":{"start":{"line":82,"column":0},"end":{"line":82,"column":1}},"37":{"start":{"line":77,"column":13},"end":{"line":77,"column":31}},"38":{"start":{"line":87,"column":0},"end":{"line":92,"column":1}},"39":{"start":{"line":87,"column":35},"end":{"line":87,"column":44}},"40":{"start":{"line":88,"column":1},"end":{"line":91,"column":2}},"41":{"start":{"line":90,"column":2},"end":{"line":90,"column":58}},"42":{"start":{"line":92,"column":0},"end":{"line":92,"column":1}},"43":{"start":{"line":87,"column":13},"end":{"line":87,"column":26}},"44":{"start":{"line":103,"column":0},"end":{"line":108,"column":1}},"45":{"start":{"line":103,"column":31},"end":{"line":103,"column":40}},"46":{"start":{"line":104,"column":1},"end":{"line":107,"column":2}},"47":{"start":{"line":106,"column":2},"end":{"line":106,"column":54}},"48":{"start":{"line":108,"column":0},"end":{"line":108,"column":1}},"49":{"start":{"line":103,"column":13},"end":{"line":103,"column":22}},"50":{"start":{"line":115,"column":0},"end":{"line":120,"column":1}},"51":{"start":{"line":115,"column":47},"end":{"line":115,"column":56}},"52":{"start":{"line":116,"column":1},"end":{"line":119,"column":2}},"53":{"start":{"line":118,"column":2},"end":{"line":118,"column":70}},"54":{"start":{"line":120,"column":0},"end":{"line":120,"column":1}},"55":{"start":{"line":115,"column":13},"end":{"line":115,"column":38}},"56":{"start":{"line":126,"column":0},"end":{"line":131,"column":1}},"57":{"start":{"line":126,"column":41},"end":{"line":126,"column":50}},"58":{"start":{"line":127,"column":1},"end":{"line":130,"column":2}},"59":{"start":{"line":129,"column":2},"end":{"line":129,"column":64}},"60":{"start":{"line":131,"column":0},"end":{"line":131,"column":1}},"61":{"start":{"line":126,"column":13},"end":{"line":126,"column":32}},"62":{"start":{"line":138,"column":0},"end":{"line":143,"column":1}},"63":{"start":{"line":138,"column":41},"end":{"line":138,"column":50}},"64":{"start":{"line":139,"column":1},"end":{"line":142,"column":2}},"65":{"start":{"line":141,"column":2},"end":{"line":141,"column":64}},"66":{"start":{"line":143,"column":0},"end":{"line":143,"column":1}},"67":{"start":{"line":138,"column":13},"end":{"line":138,"column":32}}},"fnMap":{"1":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"BadRequestError","line":11,"loc":{"start":{"line":11,"column":1},"end":{"line":11,"column":29}}},"3":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"UnauthorizedError","line":23,"loc":{"start":{"line":23,"column":1},"end":{"line":23,"column":29}}},"5":{"name":"(anonymous_7)","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"ForbidenError","line":34,"loc":{"start":{"line":34,"column":1},"end":{"line":34,"column":29}}},"7":{"name":"(anonymous_9)","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":null,"column":-1}}},"8":{"name":"NotFoundError","line":54,"loc":{"start":{"line":54,"column":1},"end":{"line":54,"column":29}}},"9":{"name":"(anonymous_11)","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":null,"column":-1}}},"10":{"name":"MethodNotAllowedError","line":66,"loc":{"start":{"line":66,"column":1},"end":{"line":66,"column":29}}},"11":{"name":"(anonymous_13)","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":null,"column":-1}}},"12":{"name":"NotAcceptableError","line":78,"loc":{"start":{"line":78,"column":1},"end":{"line":78,"column":29}}},"13":{"name":"(anonymous_15)","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":null,"column":-1}}},"14":{"name":"ConflictError","line":88,"loc":{"start":{"line":88,"column":1},"end":{"line":88,"column":29}}},"15":{"name":"(anonymous_17)","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":null,"column":-1}}},"16":{"name":"GoneError","line":104,"loc":{"start":{"line":104,"column":1},"end":{"line":104,"column":29}}},"17":{"name":"(anonymous_19)","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":null,"column":-1}}},"18":{"name":"UnsupportedMediaTypeError","line":116,"loc":{"start":{"line":116,"column":1},"end":{"line":116,"column":29}}},"19":{"name":"(anonymous_21)","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":null,"column":-1}}},"20":{"name":"InternalServerError","line":127,"loc":{"start":{"line":127,"column":1},"end":{"line":127,"column":29}}},"21":{"name":"(anonymous_23)","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":null,"column":-1}}},"22":{"name":"NotImplementedError","line":139,"loc":{"start":{"line":139,"column":1},"end":{"line":139,"column":29}}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":57}},{"start":{"line":12,"column":57},"end":{"line":14,"column":1}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":32},"end":{"line":12,"column":39}},{"start":{"line":12,"column":43},"end":{"line":12,"column":56}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":60}},{"start":{"line":24,"column":60},"end":{"line":26,"column":1}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":34},"end":{"line":24,"column":41}},{"start":{"line":24,"column":45},"end":{"line":24,"column":59}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":52}},{"start":{"line":35,"column":52},"end":{"line":39,"column":1}}]},"6":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":30},"end":{"line":35,"column":37}},{"start":{"line":35,"column":41},"end":{"line":35,"column":51}}]},"7":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},{"start":{"line":55,"column":53},"end":{"line":57,"column":1}}]},"8":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":30},"end":{"line":55,"column":37}},{"start":{"line":55,"column":41},"end":{"line":55,"column":52}}]},"9":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":70}},{"start":{"line":67,"column":70},"end":{"line":69,"column":1}}]},"10":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":38},"end":{"line":67,"column":45}},{"start":{"line":67,"column":49},"end":{"line":67,"column":69}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":63}},{"start":{"line":79,"column":63},"end":{"line":81,"column":1}}]},"12":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":35},"end":{"line":79,"column":42}},{"start":{"line":79,"column":46},"end":{"line":79,"column":62}}]},"13":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":52}},{"start":{"line":89,"column":52},"end":{"line":91,"column":1}}]},"14":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":30},"end":{"line":89,"column":37}},{"start":{"line":89,"column":41},"end":{"line":89,"column":51}}]},"15":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":44}},{"start":{"line":105,"column":44},"end":{"line":107,"column":1}}]},"16":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":26},"end":{"line":105,"column":33}},{"start":{"line":105,"column":37},"end":{"line":105,"column":43}}]},"17":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":78}},{"start":{"line":117,"column":78},"end":{"line":119,"column":1}}]},"18":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":42},"end":{"line":117,"column":49}},{"start":{"line":117,"column":53},"end":{"line":117,"column":77}}]},"19":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":71}},{"start":{"line":128,"column":71},"end":{"line":130,"column":1}}]},"20":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":36},"end":{"line":128,"column":43}},{"start":{"line":128,"column":47},"end":{"line":128,"column":70}}]},"21":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":64}},{"start":{"line":140,"column":64},"end":{"line":142,"column":1}}]},"22":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":36},"end":{"line":140,"column":43}},{"start":{"line":140,"column":46},"end":{"line":140,"column":63}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":2,"29":1,"30":1,"31":1,"32":1,"33":1,"34":3,"35":2,"36":1,"37":1,"38":1,"39":1,"40":3,"41":2,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":1,"49":1,"50":1,"51":1,"52":1,"53":0,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":0,"66":1,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0],"10":[1,1],"11":[2,0],"12":[2,0],"13":[2,0],"14":[2,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":1,"11":1,"12":2,"13":1,"14":2,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0},"code":"\"use strict\";\n\nimport {HttpError} from \"./server-types\"; \n\n/**\n * Represents a BAD REQUEST error. The request could not be understood by the \n * server due to malformed syntax. The client SHOULD NOT repeat the request \n * without modifications.\n */\nexport class BadRequestError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"BadRequestError\", 400, message || \"Bad Request\");\n\t\tObject[\"setPrototypeOf\"](this, BadRequestError.prototype);\n\t}\n}\n\n/**\n * Represents an UNAUTHORIZED error. The request requires user authentication. The response \n * MUST include a WWW-Authenticate header field containing a challenge applicable to the \n * requested resource. \n */\nexport class UnauthorizedError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"UnauthorizedError\", 401, message || \"Unauthorized\");\n\t\tObject[\"setPrototypeOf\"](this, UnauthorizedError.prototype);\n\t}\n}\n\n/**\n * Represents a FORBIDEN error. The server understood the request, but is refusing to \n * fulfill it. Authorization will not help and the request SHOULD NOT be repeated.\n */\nexport class ForbidenError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"ForbidenError\", 403, message || \"Forbiden\");\n\t\t// Object.setPrototypeOf(this, ForbidenError.prototype);\n        // this[\"__proto__\"] = ForbidenError.prototype;\n\t\tObject[\"setPrototypeOf\"](this, ForbidenError.prototype);\n\t}\n}\n\n/**\n * Represents a NOT FOUND error. The server has not found anything matching \n * the Request-URI. No indication is given of whether the condition is temporary \n * or permanent. The 410 (GoneError) status code SHOULD be used if the server knows, \n * through some internally configurable mechanism, that an old resource is permanently \n * unavailable and has no forwarding address. \n * \n * This error is commonly used when \n * the server does not wish to reveal exactly why the request has been refused, \n * or when no other response is applicable.\n */\nexport class NotFoundError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"NotFoundError\", 404, message || \"Not Found\");\n\t\tObject[\"setPrototypeOf\"](this, NotFoundError.prototype);\n\t}\n}\n\n/**\n * Represents a METHOD NOT ALLOWED error. The method specified in the Request-Line is not allowed for \n * the resource identified by the Request-URI. The response MUST include an Allow header \n * containing a list of valid methods for the requested resource.\n */\nexport class MethodNotAllowedError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"MethodNotAllowedError\", 405, message || \"Method Not Allowed\");\n\t\tObject[\"setPrototypeOf\"](this, MethodNotAllowedError.prototype);\n\t}\n}\n\n/**\n * Represents a NOT ACCEPTABLE error. The resource identified by the request is only capable of \n * generating response entities which have content characteristics not acceptable according \n * to the accept headers sent in the request.\n */\nexport class NotAcceptableError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"NotAcceptableError\", 406, message || \"Not Acceptable\");\n\t\tObject[\"setPrototypeOf\"](this, NotAcceptableError.prototype);\n\t}\n}\n/**\n * Represents a CONFLICT error. The request could not be completed due to a \n * conflict with the current state of the resource.\n */\nexport class ConflictError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"ConflictError\", 409, message || \"Conflict\");\n\t\tObject[\"setPrototypeOf\"](this, ConflictError.prototype);\n\t}\n}\n\n/**\n * Represents a GONE error. The requested resource is no longer available at the server \n * and no forwarding address is known. This condition is expected to be considered \n * permanent. Clients with link editing capabilities SHOULD delete references t\n * o the Request-URI after user approval. If the server does not know, or has \n * no facility to determine, whether or not the condition is permanent, the \n * error 404 (NotFoundError) SHOULD be used instead. This response is \n * cacheable unless indicated otherwise.\n */\nexport class GoneError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"GoneError\", 410, message || \"Gone\");\n\t\tObject[\"setPrototypeOf\"](this, GoneError.prototype);\n\t}\n}\n\n/**\n * Represents an UNSUPPORTED MEDIA TYPE error. The server is refusing to service the request \n * because the entity of the request is in a format not supported by the requested resource \n * for the requested method.\n */\nexport class UnsupportedMediaTypeError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"UnsupportedMediaTypeError\", 415, message || \"Unsupported Media Type\");\n\t\tObject[\"setPrototypeOf\"](this, UnsupportedMediaTypeError.prototype);\n\t}\n}\n\n/**\n * Represents an INTERNAL SERVER error. The server encountered an unexpected condition \n * which prevented it from fulfilling the request.\n */\nexport class InternalServerError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"InternalServerError\", 500, message || \"Internal Server Error\");\n\t\tObject[\"setPrototypeOf\"](this, InternalServerError.prototype);\n\t}\n}\n\n/**\n * Represents a NOT IMPLEMENTED error. The server does not support the functionality required\n *  to fulfill the request. This is the appropriate response when the server does not recognize \n * the request method and is not capable of supporting it for any resource.\n */\nexport class NotImplementedError extends HttpError {\n\tconstructor(message?: string) {\n\t\tsuper(\"NotImplementedError\", 501, message|| \"Not Implemented\");\n\t\tObject[\"setPrototypeOf\"](this, NotImplementedError.prototype);\n\t}\n}\n","l":{"3":1,"10":1,"11":1,"13":0,"15":1,"22":1,"23":1,"25":0,"27":1,"33":1,"34":1,"38":0,"40":1,"53":1,"54":1,"56":0,"58":1,"65":1,"66":2,"68":1,"70":1,"77":1,"78":3,"80":2,"82":1,"87":1,"88":3,"90":2,"92":1,"103":1,"104":1,"106":0,"108":1,"115":1,"116":1,"118":0,"120":1,"126":1,"127":1,"129":0,"131":1,"138":1,"139":1,"141":0,"143":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-types.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-types.ts","statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":4}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":5}},"4":{"start":{"line":11,"column":1},"end":{"line":11,"column":4}},"5":{"start":{"line":12,"column":1},"end":{"line":12,"column":7}},"6":{"start":{"line":13,"column":1},"end":{"line":13,"column":5}},"7":{"start":{"line":14,"column":1},"end":{"line":14,"column":8}},"8":{"start":{"line":15,"column":1},"end":{"line":15,"column":6}},"9":{"start":{"line":21,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":43,"column":0},"end":{"line":43,"column":1}},"11":{"start":{"line":21,"column":13},"end":{"line":21,"column":27}},"12":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"13":{"start":{"line":48,"column":40},"end":{"line":48,"column":45}},"14":{"start":{"line":49,"column":2},"end":{"line":54,"column":3}},"15":{"start":{"line":50,"column":14},"end":{"line":50,"column":32}},"16":{"start":{"line":51,"column":14},"end":{"line":51,"column":29}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":21}},"18":{"start":{"line":55,"column":0},"end":{"line":55,"column":1}},"19":{"start":{"line":48,"column":22},"end":{"line":48,"column":31}},"20":{"start":{"line":60,"column":0},"end":{"line":67,"column":1}},"21":{"start":{"line":66,"column":1},"end":{"line":66,"column":67}},"22":{"start":{"line":66,"column":20},"end":{"line":66,"column":36}},"23":{"start":{"line":66,"column":45},"end":{"line":66,"column":63}},"24":{"start":{"line":67,"column":0},"end":{"line":67,"column":1}},"25":{"start":{"line":60,"column":22},"end":{"line":60,"column":40}}},"fnMap":{"1":{"name":"(anonymous_3)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}}},"2":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}}},"3":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"HttpError","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":51,"column":29}}},"5":{"name":"(anonymous_8)","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"ReferencedResource","line":66,"loc":{"start":{"line":66,"column":1},"end":{"line":66,"column":63}}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":12},"end":{"line":8,"column":22}},{"start":{"line":8,"column":12},"end":{"line":8,"column":22}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":18}},{"start":{"line":52,"column":18},"end":{"line":54,"column":2}}]}},"s":{"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":6,"15":5,"16":5,"17":5,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"b":{"1":[1,1],"2":[5,0]},"f":{"1":1,"2":22,"3":1,"4":5,"5":1,"6":1},"code":"\"use strict\";\n\nimport * as express from \"express\"; \n\n/**\n * The supported HTTP methods.\n */\nexport enum HttpMethod {\n\tGET,\n\tPOST,\n\tPUT,\n\tDELETE,\n\tHEAD,\n\tOPTIONS,\n\tPATCH\n}\n\n/**\n * Represents the current context of the request being handled.\n */\nexport class ServiceContext {\n\t/**\n\t * The resolved language to be used in the current request handling. \n\t */\n\tlanguage: string;\n\t/**\n\t * The preferred media type to be used in the current request handling. \n\t */\n\taccept: string;\n\t/**\n\t * The request object. \n\t */\n\trequest: express.Request;\n\t/**\n\t * The response object \n\t */\n\tresponse: express.Response; \n\t/**\n\t * The next function. It can be used to delegate to the next middleware\n\t * registered the processing of the current request. \n\t */\n\tnext: express.NextFunction;\n}\n\n/**\n * The Base class for all HTTP errors\n */\nexport abstract class HttpError extends Error {\n  constructor(name: string, \n  \t\t\t  public statusCode: number, \n  \t\t\t  public message: string) {\n    super(message);\n    this.name = name;\n  }\n}\n\n/**\n * Used to create a reference to a resource.\n */\nexport abstract class ReferencedResource {\n\t/**\n\t * Constructor. Receives the location of the resource.\n\t * @param location To be added to the Location header on response\n\t * @param statusCode the response status code to be sent\n\t */\n\tconstructor(public location: string, public statusCode: number) {}\n}\n\n/**\n * The factory used to instantiate the object services\n */\nexport interface ServiceFactory {\n\t/**\n\t * Create a new service object. Called before each request handling.\n\t */\n\tcreate: (serviceClass: Function) => any,\n\t/**\n\t * Return the type used to handle requests to the target service.\n\t * By default, returns the serviceClass received, but you can use this\n\t * to implement IoC integrations.\n\t */\n\tgetTargetClass: (serviceClass: Function) => FunctionConstructor;\n}\n\n","l":{"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"21":2,"43":1,"48":1,"49":6,"50":5,"51":5,"53":5,"55":1,"60":1,"66":1,"67":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-return.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-return.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":9,"column":33},"end":{"line":9,"column":51}},"4":{"start":{"line":14,"column":1},"end":{"line":16,"column":2}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":1}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":24}},"7":{"start":{"line":24,"column":0},"end":{"line":33,"column":1}},"8":{"start":{"line":24,"column":37},"end":{"line":24,"column":55}},"9":{"start":{"line":30,"column":1},"end":{"line":32,"column":2}},"10":{"start":{"line":33,"column":0},"end":{"line":33,"column":1}},"11":{"start":{"line":24,"column":13},"end":{"line":24,"column":28}},"12":{"start":{"line":40,"column":0},"end":{"line":48,"column":1}},"13":{"start":{"line":40,"column":38},"end":{"line":40,"column":56}},"14":{"start":{"line":45,"column":1},"end":{"line":47,"column":2}},"15":{"start":{"line":48,"column":0},"end":{"line":48,"column":1}},"16":{"start":{"line":40,"column":13},"end":{"line":40,"column":29}},"17":{"start":{"line":55,"column":0},"end":{"line":63,"column":1}},"18":{"start":{"line":55,"column":38},"end":{"line":55,"column":56}},"19":{"start":{"line":60,"column":1},"end":{"line":62,"column":2}},"20":{"start":{"line":63,"column":0},"end":{"line":63,"column":1}},"21":{"start":{"line":55,"column":13},"end":{"line":55,"column":29}},"22":{"start":{"line":68,"column":0},"end":{"line":75,"column":1}},"23":{"start":{"line":74,"column":1},"end":{"line":74,"column":65}},"24":{"start":{"line":74,"column":20},"end":{"line":74,"column":36}},"25":{"start":{"line":74,"column":45},"end":{"line":74,"column":61}},"26":{"start":{"line":75,"column":0},"end":{"line":75,"column":1}},"27":{"start":{"line":68,"column":13},"end":{"line":68,"column":29}},"28":{"start":{"line":80,"column":0},"end":{"line":88,"column":1}},"29":{"start":{"line":87,"column":1},"end":{"line":87,"column":89}},"30":{"start":{"line":87,"column":20},"end":{"line":87,"column":35}},"31":{"start":{"line":87,"column":44},"end":{"line":87,"column":60}},"32":{"start":{"line":87,"column":69},"end":{"line":87,"column":85}},"33":{"start":{"line":88,"column":0},"end":{"line":88,"column":1}},"34":{"start":{"line":80,"column":13},"end":{"line":80,"column":31}}},"fnMap":{"1":{"name":"(anonymous_3)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"NewResource","line":14,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":29}}},"3":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"RequestAccepted","line":30,"loc":{"start":{"line":30,"column":1},"end":{"line":30,"column":29}}},"5":{"name":"(anonymous_7)","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"MovedPermanently","line":45,"loc":{"start":{"line":45,"column":1},"end":{"line":45,"column":29}}},"7":{"name":"(anonymous_9)","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":null,"column":-1}}},"8":{"name":"MovedTemporarily","line":60,"loc":{"start":{"line":60,"column":1},"end":{"line":60,"column":29}}},"9":{"name":"(anonymous_11)","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":null,"column":-1}}},"10":{"name":"DownloadResource","line":74,"loc":{"start":{"line":74,"column":1},"end":{"line":74,"column":61}}},"11":{"name":"(anonymous_13)","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":null,"column":-1}}},"12":{"name":"DownloadBinaryData","line":87,"loc":{"start":{"line":87,"column":1},"end":{"line":87,"column":85}}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":22}},{"start":{"line":15,"column":22},"end":{"line":null,"column":-1}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":22}},{"start":{"line":31,"column":22},"end":{"line":null,"column":-1}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},{"start":{"line":46,"column":22},"end":{"line":null,"column":-1}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},{"start":{"line":61,"column":22},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":1},"code":"\"use strict\";\n\nimport {ReferencedResource} from \"./server-types\"; \n\n/**\n * Inform that a new resource was created. Server will \n * add a Location header and set status to 201\n */\nexport class NewResource extends ReferencedResource {\n\t/**\n\t * Constructor. Receives the location of the new resource created.\n\t * @param location To be added to the Location header on response\n\t */\n\tconstructor(location: string) {\n\t\tsuper(location, 201);\n\t}\n}\n\n/**\n * Inform that the request was accepted but is not completed.\n * A Location header should inform the location where the user\n * can monitor his request processing status.\n */\nexport class RequestAccepted extends ReferencedResource {\n\t/**\n\t * Constructor. Receives the location where information about the \n\t * request processing can be found.\n\t * @param location To be added to the Location header on response\n\t */\n\tconstructor(location: string) {\n\t\tsuper(location, 202);\n\t}\n}\n\n/**\n * Inform that the resource has permanently\n * moved to a new location, and that future references should use a\n * new URI with their requests.\n */\nexport class MovedPermanently extends ReferencedResource {\n\t/**\n\t * Constructor. Receives the location where the resource can be found.\n\t * @param location To be added to the Location header on response\n\t */\n\tconstructor(location: string) {\n\t\tsuper(location, 301);\n\t}\n}\n\n/**\n * Inform that the resource has temporarily\n * moved to another location, but that future references should\n * still use the original URI to access the resource.\n */\nexport class MovedTemporarily extends ReferencedResource {\n\t/**\n\t * Constructor. Receives the location where the resource can be found.\n\t * @param location To be added to the Location header on response\n\t */\n\tconstructor(location: string) {\n\t\tsuper(location, 302);\n\t}\n}\n\n/**\n * Used to download a resource.\n */\nexport class DownloadResource {\n\t/**\n\t * Constructor. \n\t * @param filePath The file path to download.\n\t * @param fileName The file name\n\t */\n\tconstructor(public filePath: string, public fileName: string) {}\n}\n\n/**\n * Used to download binary data as a file.\n */\nexport class DownloadBinaryData {\n\t/**\n\t * Constructor. Receives the location of the resource.\n\t * @param content The binary data to be downloaded as a file.\n\t * @param mimeType The mime-type to be passed on Content-Type header.\n\t * @param fileName The file name\n\t */\n\tconstructor(public content: Buffer, public mimeType: string, public fileName: string) {}\n}\n","l":{"3":1,"9":1,"14":1,"17":1,"24":1,"30":1,"33":1,"40":1,"45":1,"48":1,"55":1,"60":1,"63":1,"68":1,"74":1,"75":1,"80":1,"87":1,"88":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server.ts","statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":16}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"3":{"start":{"line":11,"column":0},"end":{"line":127,"column":1}},"4":{"start":{"line":15,"column":8},"end":{"line":18,"column":2}},"5":{"start":{"line":15,"column":46},"end":{"line":15,"column":54}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":65}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":37}},"8":{"start":{"line":23,"column":8},"end":{"line":30,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":35}},"10":{"start":{"line":25,"column":2},"end":{"line":27,"column":5}},"11":{"start":{"line":26,"column":3},"end":{"line":26,"column":22}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"13":{"start":{"line":36,"column":8},"end":{"line":38,"column":2}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":49}},"15":{"start":{"line":45,"column":8},"end":{"line":64,"column":2}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":38}},"17":{"start":{"line":47,"column":2},"end":{"line":63,"column":5}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":43}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":49}},"20":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"21":{"start":{"line":54,"column":5},"end":{"line":54,"column":49}},"22":{"start":{"line":56,"column":4},"end":{"line":60,"column":5}},"23":{"start":{"line":57,"column":5},"end":{"line":59,"column":6}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":50}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":75}},"26":{"start":{"line":70,"column":8},"end":{"line":77,"column":2}},"27":{"start":{"line":71,"column":2},"end":{"line":71,"column":39}},"28":{"start":{"line":72,"column":2},"end":{"line":74,"column":5}},"29":{"start":{"line":73,"column":3},"end":{"line":73,"column":22}},"30":{"start":{"line":76,"column":2},"end":{"line":76,"column":16}},"31":{"start":{"line":84,"column":8},"end":{"line":86,"column":2}},"32":{"start":{"line":85,"column":2},"end":{"line":85,"column":40}},"33":{"start":{"line":99,"column":8},"end":{"line":101,"column":2}},"34":{"start":{"line":100,"column":2},"end":{"line":100,"column":42}},"35":{"start":{"line":107,"column":8},"end":{"line":109,"column":2}},"36":{"start":{"line":108,"column":2},"end":{"line":108,"column":33}},"37":{"start":{"line":115,"column":8},"end":{"line":118,"column":2}},"38":{"start":{"line":117,"column":2},"end":{"line":117,"column":37}},"39":{"start":{"line":124,"column":8},"end":{"line":126,"column":2}},"40":{"start":{"line":125,"column":2},"end":{"line":125,"column":36}},"41":{"start":{"line":127,"column":0},"end":{"line":127,"column":1}},"42":{"start":{"line":11,"column":13},"end":{"line":11,"column":19}}},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":1},"end":{"line":15,"column":44}}},"3":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":1},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":41}}},"5":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":1},"end":{"line":36,"column":61}}},"6":{"name":"(anonymous_7)","line":45,"loc":{"start":{"line":45,"column":1},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_8)","line":48,"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":24}}},"8":{"name":"(anonymous_9)","line":51,"loc":{"start":{"line":51,"column":19},"end":{"line":51,"column":42}}},"9":{"name":"(anonymous_10)","line":70,"loc":{"start":{"line":70,"column":1},"end":{"line":70,"column":35}}},"10":{"name":"(anonymous_11)","line":72,"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":51}}},"11":{"name":"(anonymous_12)","line":84,"loc":{"start":{"line":84,"column":1},"end":{"line":84,"column":39}}},"12":{"name":"(anonymous_13)","line":99,"loc":{"start":{"line":99,"column":1},"end":{"line":99,"column":58}}},"13":{"name":"(anonymous_14)","line":107,"loc":{"start":{"line":107,"column":1},"end":{"line":107,"column":32}}},"14":{"name":"(anonymous_15)","line":115,"loc":{"start":{"line":115,"column":1},"end":{"line":116,"column":67}}},"15":{"name":"(anonymous_16)","line":124,"loc":{"start":{"line":124,"column":1},"end":{"line":124,"column":35}}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":3}},{"start":{"line":53,"column":4},"end":{"line":53,"column":3}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":5},"end":{"line":57,"column":4}},{"start":{"line":57,"column":5},"end":{"line":57,"column":4}}]}},"s":{"1":1,"2":1,"3":2,"4":1,"5":1,"6":1,"7":1,"8":1,"9":12,"10":12,"11":180,"12":12,"13":1,"14":1,"15":1,"16":1,"17":1,"18":19,"19":54,"20":54,"21":53,"22":1,"23":1,"24":1,"25":0,"26":1,"27":2,"28":2,"29":4,"30":2,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":1},"b":{"1":[53,1],"2":[1,0]},"f":{"1":1,"2":1,"3":12,"4":180,"5":1,"6":1,"7":19,"8":54,"9":2,"10":4,"11":0,"12":0,"13":0,"14":0,"15":0},"code":"\"use strict\";\n\nimport * as express from \"express\";\nimport \"multer\"; \nimport {InternalServer} from \"./server-container\"; \nimport {HttpMethod, ServiceFactory} from \"./server-types\"; \n\n/**\n * The Http server main class. \n */\nexport class Server {\n\t/**\n\t * Create the routes for all classes decorated with our decorators\n\t */\n\tstatic buildServices(router: express.Router, ...types) {\n\t\tlet iternalServer: InternalServer = new InternalServer(router);\n\t\titernalServer.buildServices(types);\n\t}\n\n\t/**\n\t * Return all paths accepted by the Server\n\t */\n\tstatic getPaths(): Array<string> {\n\t\tlet result = new Array<string>();\n\t\tInternalServer.getPaths().forEach(value=>{\n\t\t\tresult.push(value);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Register a custom serviceFactory. It will be used to instantiate the service Objects\n\t * If You plan to use a custom serviceFactory, You must ensure to call this method before any typescript-rest service declaration.\n\t */\n\tstatic registerServiceFactory(serviceFactory: ServiceFactory) {\n\t\tInternalServer.serviceFactory = serviceFactory;\t\n\t}\n\n\t/**\n\t * Configure the Server to use [typescript-ioc](https://github.com/thiagobustamante/typescript-ioc)\n\t * to instantiate the service objects.\n\t * If You plan to use IoC, You must ensure to call this method before any typescript-rest service declaration.\n\t */\n\tstatic useIoC() {\n\t\tlet ioc = require(\"typescript-ioc\");\n\t\tServer.registerServiceFactory({\n\t\t\tcreate: (serviceClass) => {\n\t\t\t\treturn ioc.Container.get(serviceClass);\n\t\t\t},\n\t\t\tgetTargetClass: (serviceClass: Function) => {\n\t\t\t\tlet typeConstructor: Function = serviceClass;\n\t\t\t\tif (typeConstructor['name']) {\n\t\t\t\t\treturn <FunctionConstructor>typeConstructor;\n\t\t\t\t}\n\t\t\t\twhile (typeConstructor = typeConstructor['__parent']) {\n\t\t\t\t\tif (typeConstructor['name']) {\n\t\t\t\t\t\treturn <FunctionConstructor>typeConstructor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow TypeError('Can not identify the base Type for requested target');\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Return the set oh HTTP verbs configured for the given path\n\t * @param path The path to search HTTP verbs\n\t */\n\tstatic getHttpMethods(path: string): Array<HttpMethod> {\n\t\tlet result = new Array<HttpMethod>();\n\t\tInternalServer.getHttpMethods(path).forEach(value=>{\n\t\t\tresult.push(value);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * A string used for signing cookies. This is optional and if not specified, \n\t * will not parse signed cookies.\n\t * @param secret the secret used to sign\n\t */\n\tstatic setCookiesSecret(secret: string) {\n\t\tInternalServer.cookiesSecret = secret;\n\t}\n\n\t/**\n\t * Specifies a function that will be used to decode a cookie's value. \n\t * This function can be used to decode a previously-encoded cookie value \n\t * into a JavaScript string.\n\t * The default function is the global decodeURIComponent, which will decode \n\t * any URL-encoded sequences into their byte representations.\n\t * \n\t * NOTE: if an error is thrown from this function, the original, non-decoded \n\t * cookie value will be returned as the cookie's value.\n\t * @param decoder The decoder function\n\t */\n\tstatic setCookiesDecoder(decoder: (val: string) => string) {\n\t\tInternalServer.cookiesDecoder = decoder;\n\t}\n\n\t/**\n\t * Set where to store the uploaded files\n\t * @param dest Destination folder\n\t */\n\tstatic setFileDest(dest: string) {\n\t\tInternalServer.fileDest = dest;\n\t}\n\n\t/**\n\t * Set a Function to control which files are accepted to upload\n\t * @param filter The filter function\n\t */\n\tstatic setFileFilter(filter: (req: Express.Request, file: Express.Multer.File, \n\t\t\t\t\tcallback: (error: Error, acceptFile: boolean) => void) => void) {\n\t\tInternalServer.fileFilter = filter;\n\t}\n\n\t/**\n\t * Set the limits of uploaded data\n\t * @param limit The data limit\n\t */\n\tstatic setFileLimits(limit: number) {\n\t\tInternalServer.fileLimits = limit;\n\t}\n}\n","l":{"4":1,"5":1,"11":2,"15":1,"16":1,"17":1,"23":1,"24":12,"25":12,"26":180,"29":12,"36":1,"37":1,"45":1,"46":1,"47":1,"49":19,"52":54,"53":54,"54":53,"56":1,"57":1,"58":1,"61":0,"70":1,"71":2,"72":2,"73":4,"76":2,"84":1,"85":0,"99":1,"100":0,"107":1,"108":0,"115":1,"117":0,"124":1,"125":0,"127":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-container.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/server-container.ts","statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":94}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":69}},"9":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}},"10":{"start":{"line":38,"column":1},"end":{"line":40,"column":3}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"12":{"start":{"line":42,"column":8},"end":{"line":51,"column":2}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":39}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":64}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":66}},"16":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"17":{"start":{"line":47,"column":3},"end":{"line":47,"column":77}},"18":{"start":{"line":49,"column":2},"end":{"line":49,"column":83}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"20":{"start":{"line":53,"column":8},"end":{"line":64,"column":2}},"21":{"start":{"line":54,"column":2},"end":{"line":62,"column":3}},"22":{"start":{"line":55,"column":3},"end":{"line":55,"column":40}},"23":{"start":{"line":56,"column":3},"end":{"line":56,"column":86}},"24":{"start":{"line":57,"column":3},"end":{"line":59,"column":4}},"25":{"start":{"line":58,"column":4},"end":{"line":58,"column":68}},"26":{"start":{"line":60,"column":3},"end":{"line":60,"column":81}},"27":{"start":{"line":61,"column":3},"end":{"line":61,"column":24}},"28":{"start":{"line":63,"column":2},"end":{"line":63,"column":14}},"29":{"start":{"line":66,"column":1},"end":{"line":79,"column":2}},"30":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"31":{"start":{"line":68,"column":3},"end":{"line":68,"column":81}},"32":{"start":{"line":68,"column":29},"end":{"line":68,"column":79}},"33":{"start":{"line":70,"column":2},"end":{"line":76,"column":5}},"34":{"start":{"line":71,"column":3},"end":{"line":75,"column":6}},"35":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"36":{"start":{"line":73,"column":5},"end":{"line":73,"column":42}},"37":{"start":{"line":77,"column":2},"end":{"line":77,"column":38}},"38":{"start":{"line":78,"column":2},"end":{"line":78,"column":33}},"39":{"start":{"line":81,"column":1},"end":{"line":120,"column":2}},"40":{"start":{"line":82,"column":2},"end":{"line":84,"column":4}},"41":{"start":{"line":83,"column":3},"end":{"line":83,"column":72}},"42":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"43":{"start":{"line":87,"column":3},"end":{"line":87,"column":65}},"44":{"start":{"line":90,"column":2},"end":{"line":90,"column":93}},"45":{"start":{"line":91,"column":2},"end":{"line":91,"column":49}},"46":{"start":{"line":92,"column":2},"end":{"line":92,"column":33}},"47":{"start":{"line":93,"column":2},"end":{"line":93,"column":21}},"48":{"start":{"line":94,"column":2},"end":{"line":119,"column":4}},"49":{"start":{"line":96,"column":4},"end":{"line":96,"column":45}},"50":{"start":{"line":97,"column":4},"end":{"line":97,"column":10}},"51":{"start":{"line":99,"column":4},"end":{"line":99,"column":46}},"52":{"start":{"line":100,"column":3},"end":{"line":100,"column":9}},"53":{"start":{"line":102,"column":4},"end":{"line":102,"column":45}},"54":{"start":{"line":103,"column":3},"end":{"line":103,"column":9}},"55":{"start":{"line":105,"column":4},"end":{"line":105,"column":48}},"56":{"start":{"line":106,"column":3},"end":{"line":106,"column":9}},"57":{"start":{"line":108,"column":4},"end":{"line":108,"column":46}},"58":{"start":{"line":109,"column":3},"end":{"line":109,"column":9}},"59":{"start":{"line":111,"column":4},"end":{"line":111,"column":49}},"60":{"start":{"line":112,"column":3},"end":{"line":112,"column":9}},"61":{"start":{"line":114,"column":4},"end":{"line":114,"column":47}},"62":{"start":{"line":115,"column":3},"end":{"line":115,"column":9}},"63":{"start":{"line":118,"column":4},"end":{"line":118,"column":88}},"64":{"start":{"line":122,"column":9},"end":{"line":127,"column":2}},"65":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"66":{"start":{"line":124,"column":3},"end":{"line":124,"column":44}},"67":{"start":{"line":126,"column":2},"end":{"line":126,"column":13}},"68":{"start":{"line":129,"column":9},"end":{"line":143,"column":2}},"69":{"start":{"line":129,"column":1},"end":{"line":143,"column":2}},"70":{"start":{"line":130,"column":2},"end":{"line":130,"column":53}},"71":{"start":{"line":131,"column":2},"end":{"line":142,"column":5}},"72":{"start":{"line":132,"column":3},"end":{"line":132,"column":73}},"73":{"start":{"line":133,"column":3},"end":{"line":133,"column":59}},"74":{"start":{"line":134,"column":3},"end":{"line":136,"column":6}},"75":{"start":{"line":135,"column":4},"end":{"line":135,"column":44}},"76":{"start":{"line":137,"column":3},"end":{"line":137,"column":51}},"77":{"start":{"line":138,"column":3},"end":{"line":141,"column":6}},"78":{"start":{"line":139,"column":4},"end":{"line":139,"column":30}},"79":{"start":{"line":140,"column":4},"end":{"line":140,"column":45}},"80":{"start":{"line":145,"column":9},"end":{"line":165,"column":2}},"81":{"start":{"line":146,"column":2},"end":{"line":163,"column":3}},"82":{"start":{"line":147,"column":3},"end":{"line":147,"column":36}},"83":{"start":{"line":148,"column":3},"end":{"line":150,"column":4}},"84":{"start":{"line":149,"column":4},"end":{"line":149,"column":43}},"85":{"start":{"line":151,"column":3},"end":{"line":153,"column":4}},"86":{"start":{"line":152,"column":4},"end":{"line":152,"column":51}},"87":{"start":{"line":154,"column":3},"end":{"line":156,"column":4}},"88":{"start":{"line":155,"column":4},"end":{"line":155,"column":47}},"89":{"start":{"line":157,"column":3},"end":{"line":162,"column":4}},"90":{"start":{"line":158,"column":4},"end":{"line":158,"column":34}},"91":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"92":{"start":{"line":164,"column":2},"end":{"line":164,"column":21}},"93":{"start":{"line":167,"column":9},"end":{"line":201,"column":2}},"94":{"start":{"line":168,"column":2},"end":{"line":168,"column":82}},"95":{"start":{"line":170,"column":2},"end":{"line":179,"column":3}},"96":{"start":{"line":171,"column":3},"end":{"line":171,"column":17}},"97":{"start":{"line":172,"column":3},"end":{"line":174,"column":4}},"98":{"start":{"line":173,"column":4},"end":{"line":173,"column":44}},"99":{"start":{"line":175,"column":3},"end":{"line":177,"column":4}},"100":{"start":{"line":176,"column":4},"end":{"line":176,"column":57}},"101":{"start":{"line":178,"column":3},"end":{"line":178,"column":47}},"102":{"start":{"line":180,"column":2},"end":{"line":183,"column":3}},"103":{"start":{"line":181,"column":3},"end":{"line":181,"column":34}},"104":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"105":{"start":{"line":185,"column":3},"end":{"line":185,"column":58}},"106":{"start":{"line":187,"column":2},"end":{"line":198,"column":3}},"107":{"start":{"line":188,"column":3},"end":{"line":188,"column":64}},"108":{"start":{"line":189,"column":3},"end":{"line":196,"column":6}},"109":{"start":{"line":190,"column":4},"end":{"line":195,"column":5}},"110":{"start":{"line":191,"column":5},"end":{"line":191,"column":59}},"111":{"start":{"line":194,"column":5},"end":{"line":194,"column":43}},"112":{"start":{"line":197,"column":3},"end":{"line":197,"column":51}},"113":{"start":{"line":200,"column":2},"end":{"line":200,"column":16}},"114":{"start":{"line":203,"column":9},"end":{"line":213,"column":2}},"115":{"start":{"line":204,"column":2},"end":{"line":209,"column":3}},"116":{"start":{"line":205,"column":3},"end":{"line":207,"column":4}},"117":{"start":{"line":206,"column":4},"end":{"line":206,"column":45}},"118":{"start":{"line":208,"column":3},"end":{"line":208,"column":62}},"119":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"120":{"start":{"line":211,"column":3},"end":{"line":211,"column":35}},"121":{"start":{"line":215,"column":9},"end":{"line":242,"column":2}},"122":{"start":{"line":216,"column":2},"end":{"line":227,"column":3}},"123":{"start":{"line":217,"column":4},"end":{"line":217,"column":86}},"124":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"125":{"start":{"line":219,"column":5},"end":{"line":219,"column":38}},"126":{"start":{"line":223,"column":4},"end":{"line":223,"column":65}},"127":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"128":{"start":{"line":225,"column":5},"end":{"line":225,"column":37}},"129":{"start":{"line":229,"column":2},"end":{"line":237,"column":3}},"130":{"start":{"line":230,"column":4},"end":{"line":230,"column":77}},"131":{"start":{"line":231,"column":4},"end":{"line":236,"column":5}},"132":{"start":{"line":232,"column":5},"end":{"line":232,"column":38}},"133":{"start":{"line":235,"column":5},"end":{"line":235,"column":51}},"134":{"start":{"line":239,"column":2},"end":{"line":241,"column":3}},"135":{"start":{"line":240,"column":4},"end":{"line":240,"column":59}},"136":{"start":{"line":244,"column":9},"end":{"line":273,"column":2}},"137":{"start":{"line":245,"column":2},"end":{"line":245,"column":85}},"138":{"start":{"line":246,"column":2},"end":{"line":271,"column":3}},"139":{"start":{"line":247,"column":3},"end":{"line":270,"column":5}},"140":{"start":{"line":248,"column":4},"end":{"line":269,"column":5}},"141":{"start":{"line":250,"column":6},"end":{"line":250,"column":35}},"142":{"start":{"line":251,"column":6},"end":{"line":251,"column":12}},"143":{"start":{"line":253,"column":6},"end":{"line":253,"column":44}},"144":{"start":{"line":254,"column":6},"end":{"line":254,"column":12}},"145":{"start":{"line":256,"column":6},"end":{"line":256,"column":42}},"146":{"start":{"line":257,"column":6},"end":{"line":257,"column":12}},"147":{"start":{"line":259,"column":6},"end":{"line":259,"column":43}},"148":{"start":{"line":260,"column":6},"end":{"line":260,"column":12}},"149":{"start":{"line":262,"column":6},"end":{"line":262,"column":44}},"150":{"start":{"line":263,"column":6},"end":{"line":263,"column":12}},"151":{"start":{"line":265,"column":6},"end":{"line":265,"column":40}},"152":{"start":{"line":266,"column":6},"end":{"line":266,"column":12}},"153":{"start":{"line":268,"column":6},"end":{"line":268,"column":12}},"154":{"start":{"line":272,"column":2},"end":{"line":272,"column":23}},"155":{"start":{"line":275,"column":9},"end":{"line":289,"column":2}},"156":{"start":{"line":277,"column":2},"end":{"line":277,"column":53}},"157":{"start":{"line":278,"column":2},"end":{"line":278,"column":24}},"158":{"start":{"line":279,"column":2},"end":{"line":279,"column":25}},"159":{"start":{"line":280,"column":2},"end":{"line":280,"column":22}},"160":{"start":{"line":282,"column":2},"end":{"line":282,"column":47}},"161":{"start":{"line":283,"column":2},"end":{"line":283,"column":64}},"162":{"start":{"line":284,"column":2},"end":{"line":284,"column":61}},"163":{"start":{"line":285,"column":2},"end":{"line":285,"column":118}},"164":{"start":{"line":286,"column":2},"end":{"line":286,"column":49}},"165":{"start":{"line":287,"column":2},"end":{"line":287,"column":54}},"166":{"start":{"line":288,"column":2},"end":{"line":288,"column":36}},"167":{"start":{"line":291,"column":9},"end":{"line":335,"column":2}},"168":{"start":{"line":292,"column":2},"end":{"line":334,"column":3}},"169":{"start":{"line":294,"column":4},"end":{"line":294,"column":31}},"170":{"start":{"line":295,"column":4},"end":{"line":295,"column":10}},"171":{"start":{"line":297,"column":4},"end":{"line":297,"column":20}},"172":{"start":{"line":298,"column":4},"end":{"line":298,"column":10}},"173":{"start":{"line":300,"column":4},"end":{"line":300,"column":31}},"174":{"start":{"line":301,"column":4},"end":{"line":301,"column":10}},"175":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"176":{"start":{"line":304,"column":5},"end":{"line":304,"column":25}},"177":{"start":{"line":306,"column":4},"end":{"line":306,"column":10}},"178":{"start":{"line":308,"column":4},"end":{"line":333,"column":5}},"179":{"start":{"line":309,"column":5},"end":{"line":309,"column":50}},"180":{"start":{"line":311,"column":9},"end":{"line":333,"column":5}},"181":{"start":{"line":312,"column":5},"end":{"line":316,"column":8}},"182":{"start":{"line":317,"column":5},"end":{"line":317,"column":28}},"183":{"start":{"line":319,"column":9},"end":{"line":333,"column":5}},"184":{"start":{"line":320,"column":5},"end":{"line":320,"column":41}},"185":{"start":{"line":321,"column":5},"end":{"line":321,"column":38}},"186":{"start":{"line":323,"column":9},"end":{"line":333,"column":5}},"187":{"start":{"line":324,"column":5},"end":{"line":324,"column":21}},"188":{"start":{"line":325,"column":5},"end":{"line":329,"column":8}},"189":{"start":{"line":326,"column":6},"end":{"line":326,"column":37}},"190":{"start":{"line":328,"column":6},"end":{"line":328,"column":16}},"191":{"start":{"line":332,"column":5},"end":{"line":332,"column":21}},"192":{"start":{"line":337,"column":9},"end":{"line":398,"column":2}},"193":{"start":{"line":337,"column":1},"end":{"line":398,"column":2}},"194":{"start":{"line":338,"column":2},"end":{"line":338,"column":44}},"195":{"start":{"line":340,"column":2},"end":{"line":395,"column":5}},"196":{"start":{"line":341,"column":3},"end":{"line":394,"column":4}},"197":{"start":{"line":343,"column":5},"end":{"line":343,"column":83}},"198":{"start":{"line":344,"column":5},"end":{"line":344,"column":11}},"199":{"start":{"line":346,"column":5},"end":{"line":346,"column":82}},"200":{"start":{"line":347,"column":5},"end":{"line":347,"column":11}},"201":{"start":{"line":349,"column":5},"end":{"line":349,"column":83}},"202":{"start":{"line":350,"column":5},"end":{"line":350,"column":11}},"203":{"start":{"line":352,"column":5},"end":{"line":352,"column":84}},"204":{"start":{"line":353,"column":5},"end":{"line":353,"column":11}},"205":{"start":{"line":355,"column":5},"end":{"line":355,"column":69}},"206":{"start":{"line":356,"column":5},"end":{"line":356,"column":11}},"207":{"start":{"line":358,"column":5},"end":{"line":358,"column":80}},"208":{"start":{"line":359,"column":5},"end":{"line":361,"column":6}},"209":{"start":{"line":360,"column":6},"end":{"line":360,"column":28}},"210":{"start":{"line":362,"column":5},"end":{"line":362,"column":11}},"211":{"start":{"line":364,"column":5},"end":{"line":364,"column":52}},"212":{"start":{"line":365,"column":5},"end":{"line":365,"column":11}},"213":{"start":{"line":367,"column":5},"end":{"line":367,"column":81}},"214":{"start":{"line":368,"column":5},"end":{"line":368,"column":11}},"215":{"start":{"line":370,"column":5},"end":{"line":371,"column":44}},"216":{"start":{"line":372,"column":5},"end":{"line":372,"column":59}},"217":{"start":{"line":373,"column":5},"end":{"line":373,"column":11}},"218":{"start":{"line":375,"column":5},"end":{"line":375,"column":26}},"219":{"start":{"line":376,"column":5},"end":{"line":376,"column":11}},"220":{"start":{"line":378,"column":5},"end":{"line":378,"column":34}},"221":{"start":{"line":379,"column":5},"end":{"line":379,"column":11}},"222":{"start":{"line":381,"column":5},"end":{"line":381,"column":35}},"223":{"start":{"line":382,"column":5},"end":{"line":382,"column":11}},"224":{"start":{"line":384,"column":5},"end":{"line":384,"column":31}},"225":{"start":{"line":385,"column":5},"end":{"line":385,"column":11}},"226":{"start":{"line":387,"column":5},"end":{"line":387,"column":33}},"227":{"start":{"line":388,"column":5},"end":{"line":388,"column":11}},"228":{"start":{"line":390,"column":5},"end":{"line":390,"column":35}},"229":{"start":{"line":391,"column":5},"end":{"line":391,"column":11}},"230":{"start":{"line":393,"column":5},"end":{"line":393,"column":43}},"231":{"start":{"line":397,"column":2},"end":{"line":397,"column":16}},"232":{"start":{"line":400,"column":9},"end":{"line":410,"column":2}},"233":{"start":{"line":401,"column":2},"end":{"line":401,"column":41}},"234":{"start":{"line":402,"column":2},"end":{"line":409,"column":3}},"235":{"start":{"line":404,"column":4},"end":{"line":404,"column":51}},"236":{"start":{"line":406,"column":4},"end":{"line":406,"column":33}},"237":{"start":{"line":408,"column":4},"end":{"line":408,"column":22}},"238":{"start":{"line":419,"column":8},"end":{"line":431,"column":2}},"239":{"start":{"line":420,"column":2},"end":{"line":430,"column":3}},"240":{"start":{"line":421,"column":3},"end":{"line":421,"column":32}},"241":{"start":{"line":422,"column":3},"end":{"line":428,"column":6}},"242":{"start":{"line":423,"column":4},"end":{"line":427,"column":7}},"243":{"start":{"line":424,"column":5},"end":{"line":426,"column":6}},"244":{"start":{"line":425,"column":6},"end":{"line":425,"column":58}},"245":{"start":{"line":429,"column":3},"end":{"line":429,"column":39}},"246":{"start":{"line":433,"column":8},"end":{"line":440,"column":2}},"247":{"start":{"line":434,"column":2},"end":{"line":434,"column":35}},"248":{"start":{"line":435,"column":2},"end":{"line":435,"column":33}},"249":{"start":{"line":436,"column":2},"end":{"line":438,"column":5}},"250":{"start":{"line":437,"column":3},"end":{"line":437,"column":19}},"251":{"start":{"line":439,"column":2},"end":{"line":439,"column":16}},"252":{"start":{"line":442,"column":8},"end":{"line":446,"column":2}},"253":{"start":{"line":443,"column":2},"end":{"line":443,"column":35}},"254":{"start":{"line":444,"column":2},"end":{"line":444,"column":66}},"255":{"start":{"line":445,"column":2},"end":{"line":445,"column":42}},"256":{"start":{"line":448,"column":16},"end":{"line":464,"column":2}},"257":{"start":{"line":450,"column":2},"end":{"line":450,"column":46}},"258":{"start":{"line":451,"column":2},"end":{"line":455,"column":3}},"259":{"start":{"line":452,"column":3},"end":{"line":454,"column":6}},"260":{"start":{"line":453,"column":4},"end":{"line":453,"column":33}},"261":{"start":{"line":456,"column":2},"end":{"line":460,"column":3}},"262":{"start":{"line":457,"column":3},"end":{"line":459,"column":6}},"263":{"start":{"line":458,"column":4},"end":{"line":458,"column":33}},"264":{"start":{"line":461,"column":2},"end":{"line":463,"column":3}},"265":{"start":{"line":462,"column":3},"end":{"line":462,"column":55}},"266":{"start":{"line":466,"column":16},"end":{"line":482,"column":2}},"267":{"start":{"line":468,"column":2},"end":{"line":468,"column":44}},"268":{"start":{"line":469,"column":2},"end":{"line":473,"column":3}},"269":{"start":{"line":470,"column":3},"end":{"line":472,"column":6}},"270":{"start":{"line":471,"column":4},"end":{"line":471,"column":33}},"271":{"start":{"line":474,"column":2},"end":{"line":478,"column":3}},"272":{"start":{"line":475,"column":3},"end":{"line":477,"column":6}},"273":{"start":{"line":476,"column":4},"end":{"line":476,"column":33}},"274":{"start":{"line":479,"column":2},"end":{"line":481,"column":3}},"275":{"start":{"line":480,"column":3},"end":{"line":480,"column":51}},"276":{"start":{"line":484,"column":16},"end":{"line":489,"column":2}},"277":{"start":{"line":486,"column":2},"end":{"line":486,"column":63}},"278":{"start":{"line":487,"column":2},"end":{"line":487,"column":61}},"279":{"start":{"line":488,"column":2},"end":{"line":488,"column":58}},"280":{"start":{"line":491,"column":16},"end":{"line":516,"column":2}},"281":{"start":{"line":493,"column":2},"end":{"line":493,"column":76}},"282":{"start":{"line":495,"column":2},"end":{"line":495,"column":79}},"283":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"284":{"start":{"line":497,"column":3},"end":{"line":497,"column":65}},"285":{"start":{"line":500,"column":2},"end":{"line":503,"column":3}},"286":{"start":{"line":501,"column":3},"end":{"line":501,"column":54}},"287":{"start":{"line":502,"column":3},"end":{"line":502,"column":97}},"288":{"start":{"line":505,"column":2},"end":{"line":505,"column":84}},"289":{"start":{"line":506,"column":2},"end":{"line":509,"column":3}},"290":{"start":{"line":507,"column":3},"end":{"line":507,"column":47}},"291":{"start":{"line":508,"column":3},"end":{"line":508,"column":63}},"292":{"start":{"line":510,"column":2},"end":{"line":513,"column":3}},"293":{"start":{"line":511,"column":3},"end":{"line":512,"column":40}},"294":{"start":{"line":514,"column":2},"end":{"line":514,"column":52}},"295":{"start":{"line":515,"column":2},"end":{"line":515,"column":44}},"296":{"start":{"line":517,"column":0},"end":{"line":517,"column":1}},"297":{"start":{"line":16,"column":8},"end":{"line":16,"column":99}},"298":{"start":{"line":17,"column":8},"end":{"line":17,"column":79}},"299":{"start":{"line":18,"column":8},"end":{"line":18,"column":39}},"300":{"start":{"line":24,"column":8},"end":{"line":33,"column":2}},"301":{"start":{"line":26,"column":3},"end":{"line":26,"column":61}},"302":{"start":{"line":27,"column":3},"end":{"line":27,"column":37}},"303":{"start":{"line":28,"column":3},"end":{"line":28,"column":24}},"304":{"start":{"line":31,"column":3},"end":{"line":31,"column":44}},"305":{"start":{"line":15,"column":13},"end":{"line":15,"column":27}}},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"InternalServer","line":38,"loc":{"start":{"line":38,"column":1},"end":{"line":38,"column":35}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":45}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":1},"end":{"line":53,"column":66}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":1},"end":{"line":66,"column":38}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":21},"end":{"line":68,"column":25}}},"7":{"name":"(anonymous_7)","line":70,"loc":{"start":{"line":70,"column":39},"end":{"line":70,"column":48}}},"8":{"name":"(anonymous_8)","line":71,"loc":{"start":{"line":71,"column":29},"end":{"line":71,"column":35}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":1},"end":{"line":81,"column":88}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":16},"end":{"line":82,"column":31}}},"11":{"name":"(anonymous_11)","line":122,"loc":{"start":{"line":122,"column":1},"end":{"line":122,"column":73}}},"12":{"name":"(anonymous_12)","line":129,"loc":{"start":{"line":129,"column":1},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_13)","line":131,"loc":{"start":{"line":131,"column":16},"end":{"line":131,"column":21}}},"14":{"name":"(anonymous_14)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":40}}},"15":{"name":"(anonymous_15)","line":138,"loc":{"start":{"line":138,"column":25},"end":{"line":138,"column":97}}},"16":{"name":"(anonymous_16)","line":145,"loc":{"start":{"line":145,"column":1},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_17)","line":167,"loc":{"start":{"line":167,"column":1},"end":{"line":167,"column":69}}},"18":{"name":"(anonymous_18)","line":189,"loc":{"start":{"line":189,"column":31},"end":{"line":189,"column":39}}},"19":{"name":"(anonymous_19)","line":203,"loc":{"start":{"line":203,"column":1},"end":{"line":203,"column":94}}},"20":{"name":"(anonymous_20)","line":215,"loc":{"start":{"line":215,"column":1},"end":{"line":215,"column":87}}},"21":{"name":"(anonymous_21)","line":244,"loc":{"start":{"line":244,"column":1},"end":{"line":244,"column":83}}},"22":{"name":"(anonymous_22)","line":247,"loc":{"start":{"line":247,"column":35},"end":{"line":247,"column":50}}},"23":{"name":"(anonymous_23)","line":275,"loc":{"start":{"line":275,"column":1},"end":{"line":276,"column":73}}},"24":{"name":"(anonymous_24)","line":291,"loc":{"start":{"line":291,"column":1},"end":{"line":291,"column":80}}},"25":{"name":"(anonymous_25)","line":325,"loc":{"start":{"line":325,"column":16},"end":{"line":325,"column":28}}},"26":{"name":"(anonymous_26)","line":327,"loc":{"start":{"line":327,"column":14},"end":{"line":327,"column":26}}},"27":{"name":"(anonymous_27)","line":337,"loc":{"start":{"line":337,"column":1},"end":{"line":337,"column":90}}},"28":{"name":"(anonymous_28)","line":340,"loc":{"start":{"line":340,"column":35},"end":{"line":340,"column":40}}},"29":{"name":"(anonymous_29)","line":400,"loc":{"start":{"line":400,"column":1},"end":{"line":400,"column":60}}},"30":{"name":"(anonymous_30)","line":419,"loc":{"start":{"line":419,"column":1},"end":{"line":null,"column":-1}}},"31":{"name":"(anonymous_31)","line":422,"loc":{"start":{"line":422,"column":40},"end":{"line":422,"column":49}}},"32":{"name":"(anonymous_32)","line":423,"loc":{"start":{"line":423,"column":30},"end":{"line":423,"column":36}}},"33":{"name":"(anonymous_33)","line":433,"loc":{"start":{"line":433,"column":1},"end":{"line":null,"column":-1}}},"34":{"name":"(anonymous_34)","line":436,"loc":{"start":{"line":436,"column":31},"end":{"line":436,"column":42}}},"35":{"name":"(anonymous_35)","line":442,"loc":{"start":{"line":442,"column":1},"end":{"line":442,"column":35}}},"36":{"name":"(anonymous_36)","line":448,"loc":{"start":{"line":448,"column":1},"end":{"line":449,"column":46}}},"37":{"name":"(anonymous_37)","line":452,"loc":{"start":{"line":452,"column":34},"end":{"line":452,"column":38}}},"38":{"name":"(anonymous_38)","line":457,"loc":{"start":{"line":457,"column":35},"end":{"line":457,"column":39}}},"39":{"name":"(anonymous_39)","line":466,"loc":{"start":{"line":466,"column":1},"end":{"line":467,"column":47}}},"40":{"name":"(anonymous_40)","line":470,"loc":{"start":{"line":470,"column":32},"end":{"line":470,"column":38}}},"41":{"name":"(anonymous_41)","line":475,"loc":{"start":{"line":475,"column":33},"end":{"line":475,"column":39}}},"42":{"name":"(anonymous_42)","line":484,"loc":{"start":{"line":484,"column":1},"end":{"line":485,"column":47}}},"43":{"name":"(anonymous_43)","line":491,"loc":{"start":{"line":491,"column":1},"end":{"line":492,"column":47}}},"44":{"name":"(anonymous_44)","line":25,"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":33}}},"45":{"name":"(anonymous_45)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":41}}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":21},"end":{"line":45,"column":35}},{"start":{"line":45,"column":39},"end":{"line":45,"column":65}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":1}},{"start":{"line":46,"column":2},"end":{"line":46,"column":1}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":1}},{"start":{"line":54,"column":2},"end":{"line":54,"column":1}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":3},"end":{"line":57,"column":2}},{"start":{"line":57,"column":3},"end":{"line":57,"column":2}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":1}},{"start":{"line":67,"column":2},"end":{"line":67,"column":1}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":3}},{"start":{"line":72,"column":4},"end":{"line":72,"column":3}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":1}},{"start":{"line":86,"column":2},"end":{"line":86,"column":1}}]},"8":{"line":95,"type":"switch","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":10}},{"start":{"line":98,"column":3},"end":{"line":100,"column":9}},{"start":{"line":101,"column":3},"end":{"line":103,"column":9}},{"start":{"line":104,"column":3},"end":{"line":106,"column":9}},{"start":{"line":107,"column":3},"end":{"line":109,"column":9}},{"start":{"line":110,"column":3},"end":{"line":112,"column":9}},{"start":{"line":113,"column":3},"end":{"line":115,"column":9}},{"start":{"line":117,"column":4},"end":{"line":118,"column":88}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":1}},{"start":{"line":123,"column":2},"end":{"line":123,"column":1}}]},"10":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":11}},{"start":{"line":123,"column":15},"end":{"line":123,"column":31}}]},"11":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":1}},{"start":{"line":146,"column":2},"end":{"line":146,"column":1}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":3},"end":{"line":148,"column":2}},{"start":{"line":148,"column":3},"end":{"line":148,"column":2}}]},"13":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":3},"end":{"line":151,"column":2}},{"start":{"line":151,"column":3},"end":{"line":151,"column":2}}]},"14":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":3},"end":{"line":154,"column":2}},{"start":{"line":154,"column":3},"end":{"line":154,"column":2}}]},"15":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":3},"end":{"line":157,"column":2}},{"start":{"line":157,"column":3},"end":{"line":157,"column":2}}]},"16":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":1}},{"start":{"line":170,"column":2},"end":{"line":170,"column":1}}]},"17":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":3},"end":{"line":172,"column":2}},{"start":{"line":172,"column":3},"end":{"line":172,"column":2}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":3},"end":{"line":175,"column":2}},{"start":{"line":175,"column":3},"end":{"line":175,"column":2}}]},"19":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":1}},{"start":{"line":180,"column":2},"end":{"line":180,"column":1}}]},"20":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":1}},{"start":{"line":184,"column":2},"end":{"line":184,"column":1}}]},"21":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":34}},{"start":{"line":184,"column":38},"end":{"line":184,"column":73}}]},"22":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":1}},{"start":{"line":187,"column":2},"end":{"line":187,"column":1}}]},"23":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":3}},{"start":{"line":190,"column":4},"end":{"line":190,"column":3}}]},"24":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":1}},{"start":{"line":204,"column":2},"end":{"line":204,"column":1}}]},"25":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":3},"end":{"line":205,"column":2}},{"start":{"line":205,"column":3},"end":{"line":205,"column":2}}]},"26":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":1}},{"start":{"line":210,"column":2},"end":{"line":210,"column":1}}]},"27":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":1}},{"start":{"line":216,"column":2},"end":{"line":216,"column":1}}]},"28":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":3}},{"start":{"line":218,"column":4},"end":{"line":218,"column":3}}]},"29":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":3}},{"start":{"line":224,"column":4},"end":{"line":224,"column":3}}]},"30":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":17}},{"start":{"line":224,"column":21},"end":{"line":224,"column":41}}]},"31":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":1}},{"start":{"line":229,"column":2},"end":{"line":229,"column":1}}]},"32":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":3}},{"start":{"line":231,"column":4},"end":{"line":231,"column":3}}]},"33":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":1}},{"start":{"line":239,"column":2},"end":{"line":239,"column":1}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":1}},{"start":{"line":246,"column":2},"end":{"line":246,"column":1}}]},"35":{"line":249,"type":"switch","locations":[{"start":{"line":249,"column":5},"end":{"line":251,"column":12}},{"start":{"line":252,"column":5},"end":{"line":254,"column":12}},{"start":{"line":255,"column":5},"end":{"line":257,"column":12}},{"start":{"line":258,"column":5},"end":{"line":260,"column":12}},{"start":{"line":261,"column":5},"end":{"line":263,"column":12}},{"start":{"line":264,"column":5},"end":{"line":266,"column":12}},{"start":{"line":267,"column":5},"end":{"line":268,"column":12}}]},"36":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":15},"end":{"line":285,"column":69}},{"start":{"line":285,"column":73},"end":{"line":285,"column":117}}]},"37":{"line":293,"type":"switch","locations":[{"start":{"line":293,"column":3},"end":{"line":295,"column":10}},{"start":{"line":296,"column":3},"end":{"line":298,"column":10}},{"start":{"line":299,"column":3},"end":{"line":301,"column":10}},{"start":{"line":302,"column":3},"end":{"line":306,"column":10}},{"start":{"line":307,"column":3},"end":{"line":333,"column":5}}]},"38":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":3}},{"start":{"line":303,"column":4},"end":{"line":303,"column":3}}]},"39":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":3}},{"start":{"line":308,"column":4},"end":{"line":308,"column":3}}]},"40":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":22}},{"start":{"line":308,"column":26},"end":{"line":308,"column":59}}]},"41":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":9},"end":{"line":311,"column":8}},{"start":{"line":311,"column":9},"end":{"line":311,"column":8}}]},"42":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":9},"end":{"line":319,"column":8}},{"start":{"line":319,"column":9},"end":{"line":319,"column":8}}]},"43":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":13},"end":{"line":319,"column":27}},{"start":{"line":319,"column":31},"end":{"line":319,"column":66}}]},"44":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":9},"end":{"line":323,"column":8}},{"start":{"line":323,"column":9},"end":{"line":323,"column":8}}]},"45":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":13},"end":{"line":323,"column":23}},{"start":{"line":323,"column":27},"end":{"line":323,"column":66}}]},"46":{"line":342,"type":"switch","locations":[{"start":{"line":342,"column":4},"end":{"line":344,"column":11}},{"start":{"line":345,"column":4},"end":{"line":347,"column":11}},{"start":{"line":348,"column":4},"end":{"line":350,"column":11}},{"start":{"line":351,"column":4},"end":{"line":353,"column":11}},{"start":{"line":354,"column":4},"end":{"line":356,"column":11}},{"start":{"line":357,"column":4},"end":{"line":362,"column":11}},{"start":{"line":363,"column":4},"end":{"line":365,"column":11}},{"start":{"line":366,"column":4},"end":{"line":368,"column":11}},{"start":{"line":369,"column":4},"end":{"line":373,"column":11}},{"start":{"line":374,"column":4},"end":{"line":376,"column":11}},{"start":{"line":377,"column":4},"end":{"line":379,"column":11}},{"start":{"line":380,"column":4},"end":{"line":382,"column":11}},{"start":{"line":383,"column":4},"end":{"line":385,"column":11}},{"start":{"line":386,"column":4},"end":{"line":388,"column":11}},{"start":{"line":389,"column":4},"end":{"line":391,"column":11}},{"start":{"line":392,"column":4},"end":{"line":393,"column":43}}]},"47":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":5},"end":{"line":359,"column":4}},{"start":{"line":359,"column":5},"end":{"line":359,"column":4}}]},"48":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":9},"end":{"line":359,"column":14}},{"start":{"line":359,"column":18},"end":{"line":359,"column":34}}]},"49":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":22},"end":{"line":370,"column":54}},{"start":{"line":371,"column":10},"end":{"line":371,"column":43}}]},"50":{"line":403,"type":"switch","locations":[{"start":{"line":403,"column":3},"end":{"line":404,"column":51}},{"start":{"line":405,"column":3},"end":{"line":406,"column":33}},{"start":{"line":407,"column":3},"end":{"line":408,"column":22}}]},"51":{"line":404,"type":"cond-expr","locations":[{"start":{"line":404,"column":24},"end":{"line":404,"column":46}},{"start":{"line":404,"column":49},"end":{"line":404,"column":50}}]},"52":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":1}},{"start":{"line":420,"column":2},"end":{"line":420,"column":1}}]},"53":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":5},"end":{"line":424,"column":4}},{"start":{"line":424,"column":5},"end":{"line":424,"column":4}}]},"54":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":9},"end":{"line":445,"column":16}},{"start":{"line":445,"column":20},"end":{"line":445,"column":41}}]},"55":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":1}},{"start":{"line":451,"column":2},"end":{"line":451,"column":1}}]},"56":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":1}},{"start":{"line":456,"column":2},"end":{"line":456,"column":1}}]},"57":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":1}},{"start":{"line":461,"column":2},"end":{"line":461,"column":1}}]},"58":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":1}},{"start":{"line":469,"column":2},"end":{"line":469,"column":1}}]},"59":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":1}},{"start":{"line":474,"column":2},"end":{"line":474,"column":1}}]},"60":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":1}},{"start":{"line":479,"column":2},"end":{"line":479,"column":1}}]},"61":{"line":493,"type":"cond-expr","locations":[{"start":{"line":493,"column":46},"end":{"line":493,"column":70}},{"start":{"line":493,"column":73},"end":{"line":493,"column":75}}]},"62":{"line":495,"type":"cond-expr","locations":[{"start":{"line":495,"column":51},"end":{"line":495,"column":60}},{"start":{"line":495,"column":63},"end":{"line":495,"column":78}}]},"63":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":496,"column":1}},{"start":{"line":496,"column":2},"end":{"line":496,"column":1}}]},"64":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":1}},{"start":{"line":500,"column":2},"end":{"line":500,"column":1}}]},"65":{"line":502,"type":"cond-expr","locations":[{"start":{"line":502,"column":66},"end":{"line":502,"column":76}},{"start":{"line":502,"column":79},"end":{"line":502,"column":95}}]},"66":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":1}},{"start":{"line":506,"column":2},"end":{"line":506,"column":1}}]},"67":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":2},"end":{"line":510,"column":1}},{"start":{"line":510,"column":2},"end":{"line":510,"column":1}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":54,"14":54,"15":54,"16":54,"17":8,"18":54,"19":54,"20":1,"21":45,"22":45,"23":45,"24":45,"25":18,"26":45,"27":45,"28":0,"29":2,"30":1,"31":1,"32":0,"33":1,"34":8,"35":18,"36":18,"37":1,"38":1,"39":19,"40":18,"41":21,"42":18,"43":18,"44":18,"45":18,"46":18,"47":18,"48":18,"49":12,"50":12,"51":4,"52":4,"53":2,"54":2,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":18,"66":0,"67":18,"68":1,"69":1,"70":1,"71":1,"72":15,"73":15,"74":15,"75":18,"76":15,"77":15,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":0,"85":1,"86":0,"87":1,"88":0,"89":1,"90":0,"91":1,"92":1,"93":1,"94":18,"95":18,"96":1,"97":1,"98":0,"99":1,"100":0,"101":1,"102":18,"103":2,"104":18,"105":2,"106":18,"107":1,"108":1,"109":1,"110":1,"111":0,"112":1,"113":18,"114":1,"115":18,"116":4,"117":3,"118":4,"119":18,"120":1,"121":1,"122":21,"123":7,"124":7,"125":6,"126":14,"127":14,"128":14,"129":21,"130":2,"131":2,"132":1,"133":1,"134":20,"135":1,"136":1,"137":19,"138":19,"139":5,"140":5,"141":5,"142":5,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":19,"155":1,"156":21,"157":21,"158":21,"159":21,"160":21,"161":19,"162":19,"163":19,"164":19,"165":18,"166":18,"167":1,"168":20,"169":0,"170":0,"171":10,"172":10,"173":2,"174":2,"175":1,"176":0,"177":1,"178":7,"179":0,"180":7,"181":1,"182":1,"183":6,"184":1,"185":1,"186":5,"187":3,"188":3,"189":2,"190":1,"191":2,"192":1,"193":19,"194":19,"195":19,"196":19,"197":1,"198":1,"199":3,"200":3,"201":1,"202":1,"203":1,"204":1,"205":2,"206":2,"207":1,"208":1,"209":1,"210":1,"211":0,"212":0,"213":1,"214":1,"215":2,"216":2,"217":2,"218":0,"219":0,"220":2,"221":2,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":2,"229":2,"230":0,"231":19,"232":1,"233":11,"234":11,"235":3,"236":0,"237":8,"238":1,"239":30,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":13,"248":13,"249":13,"250":195,"251":13,"252":1,"253":17,"254":17,"255":17,"256":1,"257":18,"258":18,"259":4,"260":8,"261":18,"262":0,"263":0,"264":18,"265":4,"266":1,"267":18,"268":18,"269":0,"270":0,"271":18,"272":1,"273":1,"274":18,"275":1,"276":1,"277":18,"278":18,"279":18,"280":1,"281":18,"282":18,"283":18,"284":4,"285":18,"286":11,"287":11,"288":18,"289":18,"290":15,"291":15,"292":18,"293":0,"294":18,"295":18,"296":1,"297":1,"298":1,"299":1,"300":1,"301":0,"302":0,"303":0,"304":0,"305":1},"b":{"1":[54,0],"2":[8,46],"3":[45,0],"4":[18,27],"5":[1,0],"6":[18,0],"7":[18,0],"8":[12,4,2,0,0,0,0,0],"9":[0,18],"10":[18,18],"11":[1,0],"12":[0,1],"13":[0,1],"14":[0,1],"15":[0,1],"16":[1,17],"17":[0,1],"18":[0,1],"19":[2,16],"20":[2,16],"21":[18,17],"22":[1,17],"23":[1,0],"24":[4,14],"25":[3,1],"26":[1,17],"27":[7,14],"28":[6,1],"29":[14,0],"30":[14,14],"31":[2,19],"32":[1,1],"33":[1,19],"34":[5,14],"35":[5,0,0,0,0,0,0],"36":[19,0],"37":[0,10,2,1,7],"38":[0,1],"39":[0,7],"40":[7,0],"41":[1,6],"42":[1,5],"43":[6,1],"44":[3,2],"45":[5,3],"46":[1,3,1,1,2,1,0,1,2,0,2,1,1,1,2,0],"47":[1,0],"48":[1,1],"49":[2,1],"50":[3,0,8],"51":[3,0],"52":[0,30],"53":[0,0],"54":[17,0],"55":[4,14],"56":[0,18],"57":[4,14],"58":[0,18],"59":[1,17],"60":[1,17],"61":[14,4],"62":[8,10],"63":[4,14],"64":[11,7],"65":[1,10],"66":[15,3],"67":[0,18]},"f":{"1":1,"2":1,"3":54,"4":45,"5":1,"6":0,"7":8,"8":18,"9":18,"10":21,"11":18,"12":1,"13":15,"14":18,"15":1,"16":1,"17":18,"18":1,"19":18,"20":21,"21":19,"22":5,"23":21,"24":20,"25":2,"26":1,"27":19,"28":19,"29":11,"30":30,"31":0,"32":0,"33":13,"34":195,"35":17,"36":18,"37":8,"38":0,"39":18,"40":0,"41":1,"42":18,"43":18,"44":0,"45":0},"code":"/// <reference path=\"./collections.d.ts\" />\n\"use strict\";\n\nimport * as express from \"express\"; \nimport * as bodyParser from \"body-parser\"; \nimport * as cookieParser from \"cookie-parser\";\nimport * as multer from \"multer\";\nimport * as metadata from \"./metadata\";\nimport * as Errors from \"./server-errors\";\nimport * as _ from \"lodash\";\n\nimport {HttpMethod, ServiceContext, ReferencedResource, ServiceFactory} from \"./server-types\";\nimport {DownloadResource, DownloadBinaryData} from \"./server-return\";\n\nexport class InternalServer {\n\tstatic serverClasses: Map<string,metadata.ServiceClass> = new Map<string,metadata.ServiceClass>();\n\tstatic paths: Map<string,Set<HttpMethod>> = new Map<string,Set<HttpMethod>>();\n\tstatic pathsResolved: boolean = false;\n\tstatic cookiesSecret: string;\n\tstatic cookiesDecoder: (val: string) => string;\n\tstatic fileDest: string;\n\tstatic fileFilter: (req: Express.Request, file: Express.Multer.File, callback: (error: Error, acceptFile: boolean) => void) => void;\n\tstatic fileLimits: number;\n\tstatic serviceFactory: ServiceFactory = {\n\t\tcreate: (serviceClass: Function) => {\n\t\t\tlet serviceObject = Object.create(serviceClass.prototype);\n\t\t\tserviceClass.apply(serviceObject);\n\t\t\treturn serviceObject;\n\t\t},\n\t\tgetTargetClass: (serviceClass: Function) => {\n\t\t\treturn <FunctionConstructor>serviceClass;\n\t\t}\n\t}\n\n\trouter: express.Router;\n\tupload: multer.Instance; \n\n\tconstructor(router: express.Router) {\n\t\tthis.router = router;\n\t }\n\n\tstatic registerServiceClass(target: Function): metadata.ServiceClass {\n\t\tInternalServer.pathsResolved = false;\n\t\ttarget = InternalServer.serviceFactory.getTargetClass(target);\n\t\tlet name: string = target['name'] || target.constructor['name'];\n\t\tif (!InternalServer.serverClasses.has(name)) {\n\t\t\tInternalServer.serverClasses.set(name, new metadata.ServiceClass(target));\n\t\t}\n\t\tlet serviceClass: metadata.ServiceClass = InternalServer.serverClasses.get(name);\n\t\treturn serviceClass;\n\t}\n\n\tstatic registerServiceMethod(target: Function, methodName: string): metadata.ServiceMethod {\n\t\tif (methodName) {\n\t\t\tInternalServer.pathsResolved = false;\n\t\t\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target);\n\t\t\tif (!classData.methods.has(methodName)) {\n\t\t\t\tclassData.methods.set(methodName, new metadata.ServiceMethod());\n\t\t\t}\n\t\t\tlet serviceMethod: metadata.ServiceMethod = classData.methods.get(methodName);\n\t\t\treturn serviceMethod;\n\t\t}\n\t\treturn null;\n\t}\n\n\tbuildServices(types?: Array<Function>) {\n\t\tif (types) {\n\t\t\ttypes = types.map(type => InternalServer.serviceFactory.getTargetClass(type));\n\t\t}\n\t\tInternalServer.serverClasses.forEach(classData => { \n\t\t\tclassData.methods.forEach(method => {\n\t\t\t\tif (this.validateTargetType(classData.targetClass, types)) {\n\t\t\t\t\tthis.buildService(classData, method);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tInternalServer.pathsResolved = true;\n\t\tthis.handleNotAllowedMethods();\n\t}\n\n\tbuildService(serviceClass: metadata.ServiceClass, serviceMethod: metadata.ServiceMethod) {\n\t\tlet handler = (req, res, next) => {\n\t\t\tthis.callTargetEndPoint(serviceClass, serviceMethod, req, res, next);\n\t\t};\n\n\t\tif (!serviceMethod.resolvedPath) {\n\t\t\tInternalServer.resolveProperties(serviceClass, serviceMethod);\n\t\t}\n\n\t\tlet middleware: Array<express.RequestHandler> = this.buildServiceMiddleware(serviceMethod);\n\t\tlet args: any[] = [serviceMethod.resolvedPath];\n\t\targs = args.concat(middleware);\n\t\targs.push(handler);\n\t\tswitch (serviceMethod.httpMethod) {\n\t\t \tcase HttpMethod.GET:\n\t\t\t\tthis.router.get.apply(this.router, args);\n\t\t \tbreak;\n\t\t\tcase HttpMethod.POST:\n\t\t\t\tthis.router.post.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PUT:\n\t\t\t\tthis.router.put.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.DELETE:\n\t\t\t\tthis.router.delete.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.HEAD:\n\t\t\t\tthis.router.head.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.OPTIONS:\n\t\t\t\tthis.router.options.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PATCH:\n\t\t\t\tthis.router.patch.apply(this.router, args);\n\t\t\tbreak;\n\n\t\t \tdefault:\n\t\t\t\tthrow Error(\"Invalid http method for service [\" + serviceMethod.resolvedPath + \"]\");\n\t\t }\n\t}\n\n\tprivate validateTargetType(targetClass: Function, types: Array<Function>): boolean {\n\t\tif (types && types.length > 0){\n\t\t\treturn (types.indexOf(targetClass) > -1);\n\t\t}\n\t\treturn true\n\t}\n\n\tprivate handleNotAllowedMethods() {\n\t\tlet paths: Set<string> = InternalServer.getPaths();\n\t\tpaths.forEach((path)=>{\n\t\t\tlet supported : Set<HttpMethod> = InternalServer.getHttpMethods(path);\n\t\t\tlet allowedMethods: Array<string> = new Array<string>();\n\t\t\tsupported.forEach((method: HttpMethod) => {\n\t\t\t\tallowedMethods.push(HttpMethod[method]);\n\t\t\t});\n\t\t\tlet allowed: string = allowedMethods.join(', '); \n\t\t\tthis.router.all(path, (req: express.Request, res: express.Response, next: express.NextFunction) => {\n\t\t\t\tres.set('Allow', allowed);\n\t\t\t\tthrow new Errors.MethodNotAllowedError();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getUploader(): multer.Instance {\n\t\tif (!this.upload) {\n\t\t\tlet options : multer.Options= {};\n\t\t\tif (InternalServer.fileDest) {\n\t\t\t\toptions.dest = InternalServer.fileDest;\n\t\t\t}\n\t\t\tif (InternalServer.fileFilter) {\n\t\t\t\toptions.fileFilter = InternalServer.fileFilter;\n\t\t\t}\n\t\t\tif (InternalServer.fileLimits) {\n\t\t\t\toptions.limits = InternalServer.fileLimits;\n\t\t\t}\n\t\t\tif (options.dest) {\n\t\t\t\tthis.upload = multer(options);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.upload = multer();\n\t\t\t}\n\t\t}\n\t\treturn this.upload;\n\t} \n\n\tprivate buildServiceMiddleware(serviceMethod: metadata.ServiceMethod): Array<express.RequestHandler> {\n\t\tlet result: Array<express.RequestHandler> = new Array<express.RequestHandler>();\n\n\t\tif (serviceMethod.mustParseCookies) {\n\t\t\tlet args = [];\n\t\t\tif (InternalServer.cookiesSecret) {\n\t\t\t\targs.push(InternalServer.cookiesSecret);\n\t\t\t}\n\t\t\tif (InternalServer.cookiesDecoder){\n\t\t\t\targs.push({ decode: InternalServer.cookiesDecoder });\n\t\t\t}\n\t\t\tresult.push(cookieParser.apply(this, args));\n\t\t}\n\t\tif (serviceMethod.mustParseBody) {\n\t\t\tresult.push(bodyParser.json());\n\t\t\t//TODO adicionar parser de XML para o body\n\t\t}\n\t\tif (serviceMethod.mustParseForms || serviceMethod.acceptMultiTypedParam) {\n\t\t\tresult.push(bodyParser.urlencoded({ extended: true }));\n\t\t}\n\t\tif (serviceMethod.files.length > 0) {\n\t\t\tlet options: Array<multer.Field> = new Array<multer.Field>();\n\t\t\tserviceMethod.files.forEach(fileData => {\n\t\t\t\tif (fileData.singleFile) {\n\t\t\t\t\toptions.push({\"name\": fileData.name,  \"maxCount\": 1});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions.push({\"name\": fileData.name});\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult.push(this.getUploader().fields(options));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate processResponseHeaders(serviceMethod: metadata.ServiceMethod, context: ServiceContext) {\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\tif (serviceMethod.httpMethod === HttpMethod.GET) {\n\t\t\t\tcontext.response.vary(\"Accept-Language\");\n\t\t\t}\n\t\t\tcontext.response.set(\"Content-Language\", context.language);\n\t\t}\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\tcontext.response.vary(\"Accept\");\n\t\t}\n\t}\n\n\tprivate checkAcceptance(serviceMethod: metadata.ServiceMethod, context: ServiceContext): void{\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\t let lang: any = context.request.acceptsLanguages(serviceMethod.resolvedLanguages);\n\t\t\t if (lang) {\n\t\t\t\t context.language = <string> lang;\n\t\t\t }\n\t\t}\n\t\telse {\n\t\t\t let languages: string[] = context.request.acceptsLanguages();\n\t\t\t if (languages && languages.length > 0) {\n\t\t\t\t context.language = languages[0];\n\t\t\t }\n\t\t}\n\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\t let accept: any = context.request.accepts(serviceMethod.resolvedAccepts);\n\t\t\t if (accept) {\n\t\t\t\t context.accept = <string> accept;\n\t\t\t }\n\t\t\t else {\n\t\t\t \tthrow new Errors.NotAcceptableError(\"Accept\");\n\t\t\t }\n\t\t}\n\n\t\tif (!context.language) {\n\t\t \tthrow new Errors.NotAcceptableError(\"Accept-Language\");\n\t\t}\n\t}\n\n\tprivate createService(serviceClass: metadata.ServiceClass, context: ServiceContext) {\n\t\tlet serviceObject = InternalServer.serviceFactory.create(serviceClass.targetClass);\n\t\tif (serviceClass.hasProperties()) {\n\t\t\tserviceClass.properties.forEach((paramType, key) => {\n\t\t\t\tswitch (paramType) {\n\t\t\t\t\tcase metadata.ParamType.context:\n\t\t\t\t\t\tserviceObject[key] = context;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_accept_language:\n\t\t\t\t\t\tserviceObject[key] = context.language;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_accept:\n\t\t\t\t\t\tserviceObject[key] = context.accept;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_request:\n\t\t\t\t\t\tserviceObject[key] = context.request;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_response:\n\t\t\t\t\t\tserviceObject[key] = context.response;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_next:\n\t\t\t\t\t\tserviceObject[key] = context.next;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn serviceObject;\n\t}\n\n\tprivate callTargetEndPoint(serviceClass: metadata.ServiceClass, serviceMethod: metadata.ServiceMethod, \n\t\treq: express.Request, res: express.Response, next: express.NextFunction) {\n\t\tlet context: ServiceContext = new ServiceContext();\n\t\tcontext.request = req;\n\t\tcontext.response = res;\n\t\tcontext.next = next;\n\n\t\tthis.checkAcceptance(serviceMethod, context);\n\t\tlet serviceObject = this.createService(serviceClass, context);\n\t\tlet args = this.buildArgumentsList(serviceMethod, context);\n\t\tlet toCall = serviceClass.targetClass.prototype[serviceMethod.name] || serviceClass.targetClass[serviceMethod.name];\n\t\tlet result = toCall.apply(serviceObject, args);\n\t\tthis.processResponseHeaders(serviceMethod, context);\n\t\tthis.sendValue(result, res, next);\n\t}\n\n\tprivate sendValue(value: any, res: express.Response, next: express.NextFunction) {\n\t\tswitch (typeof value) {\n\t\t\tcase \"number\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"string\":\n\t\t\t\tres.send(value);\n\t\t\t\tbreak;\n\t\t\tcase \"boolean\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"undefined\":\n\t\t\t\tif (!res.headersSent) {\n\t\t\t\t\tres.sendStatus(204);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (value.filePath && value instanceof DownloadResource) {\n\t\t\t\t\tres.download(value.filePath, value.fileName);\n\t\t\t\t}\n\t\t\t\telse if (value instanceof DownloadBinaryData) {\n\t\t\t\t\tres.writeHead(200, {\n\t\t\t\t\t\t'Content-Type': value.mimeType,\n\t\t\t\t\t\t'Content-disposition': 'attachment;filename=' + value.fileName,\n\t\t\t\t\t\t'Content-Length': value.content.length\n\t\t\t\t\t});\n\t\t\t\t\tres.end(value.content);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (value.location && value instanceof ReferencedResource) {\n\t\t\t\t\tres.set(\"Location\", value.location);\n\t\t\t\t\tres.sendStatus(value.statusCode);\n\t\t\t\t}\n\t\t\t\telse if (value.then && value.constructor['name'] === 'Promise') {\n\t\t\t\t\tlet self = this;\n\t\t\t\t\tvalue.then(function(val) {\n\t\t\t\t\t\tself.sendValue(val, res, next);\n\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres.json(value);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate buildArgumentsList(serviceMethod: metadata.ServiceMethod, context: ServiceContext) {\n\t\tlet result: Array<any> = new Array<any>();\n\n\t\tserviceMethod.parameters.forEach(param => {\n\t\t\tswitch (param.paramType) {\n\t\t\t\tcase metadata.ParamType.path:\n\t\t\t\t\tresult.push(this.convertType(context.request.params[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.query:\n\t\t\t\t\tresult.push(this.convertType(context.request.query[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.header:\n\t\t\t\t\tresult.push(this.convertType(context.request.header(param.name), param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.cookie:\n\t\t\t\t\tresult.push(this.convertType(context.request.cookies[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.body:\n\t\t\t\t\tresult.push(this.convertType(context.request.body, param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.file:\n\t\t\t\t\tlet files : Array<Express.Multer.File> = context.request.files[param.name];\n\t\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\t\tresult.push(files[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.files:\n\t\t\t\t\tresult.push(context.request.files[param.name]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.form:\n\t\t\t\t\tresult.push(this.convertType(context.request.body[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.param:\n\t\t\t\t\tlet paramValue = context.request.body[param.name] ||\n\t\t\t\t\t\t\t\t\t context.request.query[param.name]; \n\t\t\t\t\tresult.push(this.convertType(paramValue, param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context:\n\t\t\t\t\tresult.push(context);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_request:\n\t\t\t\t\tresult.push(context.request);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_response:\n\t\t\t\t\tresult.push(context.response);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_next:\n\t\t\t\t\tresult.push(context.next);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_accept:\n\t\t\t\t\tresult.push(context.accept);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_accept_language:\n\t\t\t\t\tresult.push(context.language);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(\"Invalid parameter type\");\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate convertType(paramValue: string, paramType: Function): any {\n\t\tlet serializedType = paramType['name'];\n\t\tswitch (serializedType) {\n\t\t\tcase \"Number\":\n\t\t\t\treturn paramValue ? parseFloat(paramValue) : 0;\n\t\t\tcase \"Boolean\":\n\t\t\t\treturn paramValue === 'true';\n\t\t\tdefault:\n\t\t\t\treturn paramValue;\n\t\t}\n\t}\n\n//TODO: \n// Parametros do tipo DTO (@BeanParam). \n// criar tipo de retorno para donwload???\n// controlar cache\n// conditional requests\n// Adicionar anotações para Coleções de recursos e para operações \n// Suportar content-type XML (input e output)\n\tstatic resolveAllPaths() {\n\t\tif (!InternalServer.pathsResolved) {\n\t\t\tInternalServer.paths.clear();\n\t\t\tInternalServer.serverClasses.forEach(classData => {\n\t\t\t\tclassData.methods.forEach(method => {\n\t\t\t\t\tif (!method.resolvedPath) {\n\t\t\t\t\t\tInternalServer.resolveProperties(classData, method);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tInternalServer.pathsResolved = true;\n\t\t}\n\t}\n\n\tstatic getPaths(): Set<string> {\n\t\tInternalServer.resolveAllPaths();\n\t\tlet result = new Set<string>();\n\t\tInternalServer.paths.forEach((value, key)=>{\n\t\t\tresult.add(key);\n\t\t});\n\t\treturn result;\n\t}\n\n\tstatic getHttpMethods(path: string) : Set<HttpMethod>{\n\t\tInternalServer.resolveAllPaths();\n\t\tlet methods : Set<HttpMethod>  = InternalServer.paths.get(path);\n\t\treturn methods || new Set<HttpMethod>();\n\t}\n\n\tprivate static resolveLanguages(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t\tserviceMethod: metadata.ServiceMethod) : void {\n\t\tlet resolvedLanguages = new Array<string>();\n\t\tif (serviceClass.languages) {\n\t\t\tserviceClass.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.languages) {\n\t\t\tserviceMethod.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (resolvedLanguages.length > 0) {\n\t\t\tserviceMethod.resolvedLanguages = resolvedLanguages;\n\t\t}\n\t}\n\n\tprivate static resolveAccepts(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t  serviceMethod: metadata.ServiceMethod) : void {\n\t\tlet resolvedAccepts = new Array<string>();\n\t\tif (serviceClass.accepts) {\n\t\t\tserviceClass.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.accepts) {\n\t\t\tserviceMethod.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (resolvedAccepts.length > 0) {\n\t\t\tserviceMethod.resolvedAccepts = resolvedAccepts;\n\t\t}\n\t}\n\n\tprivate static resolveProperties(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t\t serviceMethod: metadata.ServiceMethod) : void {\n\t\tInternalServer.resolveLanguages(serviceClass, serviceMethod);\n\t\tInternalServer.resolveAccepts(serviceClass, serviceMethod);\t\t\n\t\tInternalServer.resolvePath(serviceClass, serviceMethod);\n\t}\n\n\tprivate static resolvePath(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t   serviceMethod: metadata.ServiceMethod) : void {\n\t\tlet classPath: string = serviceClass.path ? serviceClass.path.trim() : \"\";\n\t\t\n\t\tlet resolvedPath = _.startsWith(classPath,'/') ? classPath : '/' + classPath;\n\t\tif (_.endsWith(resolvedPath, '/')) {\n\t\t\tresolvedPath = resolvedPath.slice(0, resolvedPath.length - 1);\n\t\t}\n\n\t\tif (serviceMethod.path) {\n\t\t\tlet methodPath: string = serviceMethod.path.trim();\n\t\t\tresolvedPath = resolvedPath + (_.startsWith(methodPath, '/') ? methodPath : '/' + methodPath);\n\t\t}\n\n\t\tlet declaredHttpMethods: Set<HttpMethod> = InternalServer.paths.get(resolvedPath);\n\t\tif (!declaredHttpMethods) {\n\t\t\tdeclaredHttpMethods = new Set<HttpMethod>();\n\t\t\tInternalServer.paths.set(resolvedPath, declaredHttpMethods);\n\t\t}\n\t\tif (declaredHttpMethods.has(serviceMethod.httpMethod)) {\n\t\t\tthrow Error(\"Duplicated declaration for path [\" + resolvedPath + \"], method [\" \n\t\t\t\t+ serviceMethod.httpMethod + \"]. \");\n\t\t}\n\t\tdeclaredHttpMethods.add(serviceMethod.httpMethod);\n\t\tserviceMethod.resolvedPath = resolvedPath;\n\t}\n}\n","l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":1,"15":1,"16":1,"17":1,"18":1,"24":1,"26":0,"27":0,"28":0,"31":0,"38":1,"39":1,"42":1,"43":54,"44":54,"45":54,"46":54,"47":8,"49":54,"50":54,"53":1,"54":45,"55":45,"56":45,"57":45,"58":18,"60":45,"61":45,"63":0,"66":2,"67":1,"68":1,"70":1,"71":8,"72":18,"73":18,"77":1,"78":1,"81":19,"82":18,"83":21,"86":18,"87":18,"90":18,"91":18,"92":18,"93":18,"94":18,"96":12,"97":12,"99":4,"100":4,"102":2,"103":2,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"114":0,"115":0,"118":0,"122":1,"123":18,"124":0,"126":18,"129":1,"130":1,"131":1,"132":15,"133":15,"134":15,"135":18,"137":15,"138":15,"139":1,"140":1,"145":1,"146":1,"147":1,"148":1,"149":0,"151":1,"152":0,"154":1,"155":0,"157":1,"158":0,"161":1,"164":1,"167":1,"168":18,"170":18,"171":1,"172":1,"173":0,"175":1,"176":0,"178":1,"180":18,"181":2,"184":18,"185":2,"187":18,"188":1,"189":1,"190":1,"191":1,"194":0,"197":1,"200":18,"203":1,"204":18,"205":4,"206":3,"208":4,"210":18,"211":1,"215":1,"216":21,"217":7,"218":7,"219":6,"223":14,"224":14,"225":14,"229":21,"230":2,"231":2,"232":1,"235":1,"239":20,"240":1,"244":1,"245":19,"246":19,"247":5,"248":5,"250":5,"251":5,"253":0,"254":0,"256":0,"257":0,"259":0,"260":0,"262":0,"263":0,"265":0,"266":0,"268":0,"272":19,"275":1,"277":21,"278":21,"279":21,"280":21,"282":21,"283":19,"284":19,"285":19,"286":19,"287":18,"288":18,"291":1,"292":20,"294":0,"295":0,"297":10,"298":10,"300":2,"301":2,"303":1,"304":0,"306":1,"308":7,"309":0,"311":7,"312":1,"317":1,"319":6,"320":1,"321":1,"323":5,"324":3,"325":3,"326":2,"328":1,"332":2,"337":19,"338":19,"340":19,"341":19,"343":1,"344":1,"346":3,"347":3,"349":1,"350":1,"352":1,"353":1,"355":2,"356":2,"358":1,"359":1,"360":1,"362":1,"364":0,"365":0,"367":1,"368":1,"370":2,"372":2,"373":2,"375":0,"376":0,"378":2,"379":2,"381":1,"382":1,"384":1,"385":1,"387":1,"388":1,"390":2,"391":2,"393":0,"397":19,"400":1,"401":11,"402":11,"404":3,"406":0,"408":8,"419":1,"420":30,"421":0,"422":0,"423":0,"424":0,"425":0,"429":0,"433":1,"434":13,"435":13,"436":13,"437":195,"439":13,"442":1,"443":17,"444":17,"445":17,"448":1,"450":18,"451":18,"452":4,"453":8,"456":18,"457":0,"458":0,"461":18,"462":4,"466":1,"468":18,"469":18,"470":0,"471":0,"474":18,"475":1,"476":1,"479":18,"480":1,"484":1,"486":18,"487":18,"488":18,"491":1,"493":18,"495":18,"496":18,"497":4,"500":18,"501":11,"502":11,"505":18,"506":18,"507":15,"508":15,"510":18,"511":0,"514":18,"515":18,"517":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/metadata.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/metadata.ts","statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":32,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":49}},"5":{"start":{"line":22,"column":1},"end":{"line":27,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"7":{"start":{"line":24,"column":3},"end":{"line":24,"column":49}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":38}},"9":{"start":{"line":29,"column":1},"end":{"line":31,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":55}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":1}},"12":{"start":{"line":9,"column":13},"end":{"line":9,"column":25}},"13":{"start":{"line":37,"column":0},"end":{"line":52,"column":1}},"14":{"start":{"line":42,"column":1},"end":{"line":42,"column":59}},"15":{"start":{"line":43,"column":1},"end":{"line":43,"column":35}},"16":{"start":{"line":44,"column":1},"end":{"line":44,"column":50}},"17":{"start":{"line":45,"column":1},"end":{"line":45,"column":32}},"18":{"start":{"line":46,"column":1},"end":{"line":46,"column":33}},"19":{"start":{"line":47,"column":1},"end":{"line":47,"column":40}},"20":{"start":{"line":52,"column":0},"end":{"line":52,"column":1}},"21":{"start":{"line":37,"column":13},"end":{"line":37,"column":26}},"22":{"start":{"line":57,"column":0},"end":{"line":65,"column":1}},"23":{"start":{"line":58,"column":1},"end":{"line":61,"column":2}},"24":{"start":{"line":59,"column":2},"end":{"line":59,"column":19}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":31}},"26":{"start":{"line":65,"column":0},"end":{"line":65,"column":1}},"27":{"start":{"line":57,"column":13},"end":{"line":57,"column":22}},"28":{"start":{"line":70,"column":0},"end":{"line":80,"column":1}},"29":{"start":{"line":71,"column":1},"end":{"line":75,"column":2}},"30":{"start":{"line":72,"column":2},"end":{"line":72,"column":19}},"31":{"start":{"line":73,"column":2},"end":{"line":73,"column":19}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":29}},"33":{"start":{"line":80,"column":0},"end":{"line":80,"column":1}},"34":{"start":{"line":70,"column":13},"end":{"line":70,"column":24}},"35":{"start":{"line":85,"column":0},"end":{"line":101,"column":1}},"36":{"start":{"line":86,"column":1},"end":{"line":86,"column":5}},"37":{"start":{"line":87,"column":1},"end":{"line":87,"column":6}},"38":{"start":{"line":88,"column":1},"end":{"line":88,"column":7}},"39":{"start":{"line":89,"column":1},"end":{"line":89,"column":7}},"40":{"start":{"line":90,"column":1},"end":{"line":90,"column":5}},"41":{"start":{"line":91,"column":1},"end":{"line":91,"column":5}},"42":{"start":{"line":92,"column":1},"end":{"line":92,"column":6}},"43":{"start":{"line":93,"column":1},"end":{"line":93,"column":5}},"44":{"start":{"line":94,"column":1},"end":{"line":94,"column":6}},"45":{"start":{"line":95,"column":1},"end":{"line":95,"column":8}},"46":{"start":{"line":96,"column":1},"end":{"line":96,"column":16}},"47":{"start":{"line":97,"column":1},"end":{"line":97,"column":17}},"48":{"start":{"line":98,"column":1},"end":{"line":98,"column":13}},"49":{"start":{"line":99,"column":1},"end":{"line":99,"column":15}},"50":{"start":{"line":100,"column":1},"end":{"line":100,"column":24}}},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"ServiceClass","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":34}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":1},"end":{"line":22,"column":46}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":1},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":null,"column":-1}}},"7":{"name":"FileParam","line":58,"loc":{"start":{"line":58,"column":1},"end":{"line":58,"column":46}}},"8":{"name":"(anonymous_9)","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"MethodParam","line":71,"loc":{"start":{"line":71,"column":1},"end":{"line":71,"column":63}}},"10":{"name":"(anonymous_11)","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":21}}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":1}},{"start":{"line":23,"column":2},"end":{"line":23,"column":1}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":10},"end":{"line":30,"column":25}},{"start":{"line":30,"column":29},"end":{"line":30,"column":53}}]},"3":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":21}},{"start":{"line":85,"column":12},"end":{"line":85,"column":21}}]}},"s":{"1":1,"2":1,"3":8,"4":8,"5":1,"6":1,"7":1,"8":1,"9":1,"10":20,"11":1,"12":1,"13":2,"14":18,"15":18,"16":18,"17":18,"18":18,"19":18,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":32,"31":32,"32":32,"33":1,"34":1,"35":2,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1},"b":{"1":[1,0],"2":[20,5],"3":[1,1]},"f":{"1":1,"2":8,"3":1,"4":20,"5":19,"6":1,"7":1,"8":1,"9":32,"10":1},"code":"/// <reference path=\"./collections.d.ts\" />\n\"use strict\";\n\nimport {HttpMethod} from \"./server-types\"\n\n/**\n * Metadata for REST service classes\n */\nexport class ServiceClass {\n\tconstructor(targetClass: Function) {\n\t\tthis.targetClass = targetClass;\n\t\tthis.methods = new Map<string,ServiceMethod>();\n\t}\n\n\ttargetClass: Function;\n\tpath: string;\n\tmethods: Map<string,ServiceMethod>;\n\tlanguages: Array<string>;\n\taccepts: Array<string>;\n\tproperties: Map<string,ParamType>;\n\t\n\taddProperty(key: string, paramType: ParamType) {\n\t\tif (!this.hasProperties()) {\n\t\t\tthis.properties = new Map<string,ParamType>();\n\t\t}\n\t\tthis.properties.set(key, paramType);\n\t}\n\n\thasProperties(): boolean {\n\t\treturn (this.properties && this.properties.size > 0);\n\t}\n}\n\n/**\n * Metadata for REST service methods\n */\nexport class ServiceMethod {\n\tname: string;\n\tpath: string;\n\tresolvedPath: string;\n\thttpMethod: HttpMethod;\n\tparameters: Array<MethodParam> = new Array<MethodParam>();\n\tmustParseCookies: boolean = false;\n\tfiles: Array<FileParam> = new Array<FileParam>();\n\tmustParseBody: boolean = false;\n\tmustParseForms: boolean = false;\n\tacceptMultiTypedParam: boolean = false;\n\tlanguages: Array<string>;\n\taccepts: Array<string>;\n\tresolvedLanguages: Array<string>;\n\tresolvedAccepts: Array<string>;\n}\n\n/**\n * Metadata for File parameters on REST methods\n */\nexport class FileParam {\n\tconstructor(name: string, singleFile: boolean) {\n\t\tthis.name = name;\n\t\tthis.singleFile = singleFile;\n\t}\n\n\tname: string;\n\tsingleFile: boolean;\n}\n\n/**\n * Metadata for REST service method parameters\n */\nexport class MethodParam {\n\tconstructor(name: string, type: Function, paramType: ParamType) {\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.paramType = paramType;\n\t}\n\n\tname: string;\n\ttype: Function;\n\tparamType: ParamType;\n}\n\n/**\n * Enumeration of accepted parameter types\n */\nexport enum ParamType {\n\tpath,\n\tquery,\n\theader,\n\tcookie,\n\tform,\n\tbody,\n\tparam,\n\tfile, \n\tfiles, \n\tcontext,\n\tcontext_request,\n\tcontext_response,\n\tcontext_next, \n\tcontext_accept,\n\tcontext_accept_language\n}\n","l":{"9":1,"10":1,"11":8,"12":8,"22":1,"23":1,"24":1,"26":1,"29":1,"30":20,"32":1,"37":2,"42":18,"43":18,"44":18,"45":18,"46":18,"47":18,"52":1,"57":1,"58":1,"59":1,"60":1,"65":1,"70":1,"71":1,"72":32,"73":32,"74":32,"80":1,"85":2,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1}},
"/home/travis/build/thiagobustamante/typescript-rest/release/lib/decorators.ts":{"path":"/home/travis/build/thiagobustamante/typescript-rest/release/lib/decorators.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"6":{"start":{"line":40,"column":0},"end":{"line":52,"column":1}},"7":{"start":{"line":41,"column":4},"end":{"line":51,"column":2}},"8":{"start":{"line":41,"column":21},"end":{"line":41,"column":35}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":36}},"10":{"start":{"line":43,"column":2},"end":{"line":48,"column":6}},"11":{"start":{"line":44,"column":9},"end":{"line":44,"column":63}},"12":{"start":{"line":46,"column":10},"end":{"line":48,"column":6}},"13":{"start":{"line":47,"column":9},"end":{"line":47,"column":83}},"14":{"start":{"line":50,"column":5},"end":{"line":50,"column":61}},"15":{"start":{"line":74,"column":0},"end":{"line":86,"column":1}},"16":{"start":{"line":74,"column":31},"end":{"line":74,"column":53}},"17":{"start":{"line":75,"column":4},"end":{"line":85,"column":2}},"18":{"start":{"line":75,"column":21},"end":{"line":75,"column":35}},"19":{"start":{"line":76,"column":2},"end":{"line":76,"column":36}},"20":{"start":{"line":77,"column":5},"end":{"line":82,"column":6}},"21":{"start":{"line":78,"column":9},"end":{"line":78,"column":78}},"22":{"start":{"line":80,"column":10},"end":{"line":82,"column":6}},"23":{"start":{"line":81,"column":9},"end":{"line":81,"column":98}},"24":{"start":{"line":84,"column":5},"end":{"line":84,"column":71}},"25":{"start":{"line":108,"column":0},"end":{"line":120,"column":1}},"26":{"start":{"line":108,"column":23},"end":{"line":108,"column":43}},"27":{"start":{"line":109,"column":4},"end":{"line":119,"column":2}},"28":{"start":{"line":109,"column":21},"end":{"line":109,"column":35}},"29":{"start":{"line":110,"column":2},"end":{"line":110,"column":36}},"30":{"start":{"line":111,"column":5},"end":{"line":116,"column":6}},"31":{"start":{"line":112,"column":9},"end":{"line":112,"column":68}},"32":{"start":{"line":114,"column":10},"end":{"line":116,"column":6}},"33":{"start":{"line":115,"column":9},"end":{"line":115,"column":88}},"34":{"start":{"line":118,"column":5},"end":{"line":118,"column":63}},"35":{"start":{"line":141,"column":0},"end":{"line":153,"column":1}},"36":{"start":{"line":141,"column":24},"end":{"line":141,"column":38}},"37":{"start":{"line":142,"column":1},"end":{"line":142,"column":35}},"38":{"start":{"line":143,"column":1},"end":{"line":150,"column":5}},"39":{"start":{"line":144,"column":5},"end":{"line":144,"column":61}},"40":{"start":{"line":145,"column":8},"end":{"line":145,"column":61}},"41":{"start":{"line":147,"column":9},"end":{"line":150,"column":5}},"42":{"start":{"line":148,"column":5},"end":{"line":148,"column":67}},"43":{"start":{"line":149,"column":8},"end":{"line":149,"column":62}},"44":{"start":{"line":152,"column":4},"end":{"line":152,"column":63}},"45":{"start":{"line":174,"column":0},"end":{"line":186,"column":1}},"46":{"start":{"line":174,"column":31},"end":{"line":174,"column":45}},"47":{"start":{"line":175,"column":1},"end":{"line":175,"column":35}},"48":{"start":{"line":176,"column":1},"end":{"line":183,"column":5}},"49":{"start":{"line":177,"column":5},"end":{"line":177,"column":69}},"50":{"start":{"line":178,"column":8},"end":{"line":178,"column":61}},"51":{"start":{"line":180,"column":9},"end":{"line":183,"column":5}},"52":{"start":{"line":181,"column":5},"end":{"line":181,"column":75}},"53":{"start":{"line":182,"column":8},"end":{"line":182,"column":62}},"54":{"start":{"line":185,"column":4},"end":{"line":185,"column":70}},"55":{"start":{"line":207,"column":0},"end":{"line":219,"column":1}},"56":{"start":{"line":207,"column":32},"end":{"line":207,"column":46}},"57":{"start":{"line":208,"column":1},"end":{"line":208,"column":35}},"58":{"start":{"line":209,"column":1},"end":{"line":216,"column":5}},"59":{"start":{"line":210,"column":5},"end":{"line":210,"column":70}},"60":{"start":{"line":211,"column":8},"end":{"line":211,"column":61}},"61":{"start":{"line":213,"column":9},"end":{"line":216,"column":5}},"62":{"start":{"line":214,"column":5},"end":{"line":214,"column":76}},"63":{"start":{"line":215,"column":8},"end":{"line":215,"column":62}},"64":{"start":{"line":218,"column":4},"end":{"line":218,"column":71}},"65":{"start":{"line":240,"column":0},"end":{"line":252,"column":1}},"66":{"start":{"line":240,"column":28},"end":{"line":240,"column":42}},"67":{"start":{"line":241,"column":1},"end":{"line":241,"column":35}},"68":{"start":{"line":242,"column":1},"end":{"line":249,"column":5}},"69":{"start":{"line":243,"column":5},"end":{"line":243,"column":66}},"70":{"start":{"line":244,"column":8},"end":{"line":244,"column":61}},"71":{"start":{"line":246,"column":9},"end":{"line":249,"column":5}},"72":{"start":{"line":247,"column":5},"end":{"line":247,"column":72}},"73":{"start":{"line":248,"column":8},"end":{"line":248,"column":62}},"74":{"start":{"line":251,"column":4},"end":{"line":251,"column":67}},"75":{"start":{"line":270,"column":0},"end":{"line":282,"column":1}},"76":{"start":{"line":270,"column":32},"end":{"line":270,"column":46}},"77":{"start":{"line":271,"column":1},"end":{"line":271,"column":35}},"78":{"start":{"line":272,"column":1},"end":{"line":279,"column":5}},"79":{"start":{"line":273,"column":5},"end":{"line":273,"column":77}},"80":{"start":{"line":274,"column":8},"end":{"line":274,"column":61}},"81":{"start":{"line":276,"column":9},"end":{"line":279,"column":5}},"82":{"start":{"line":277,"column":5},"end":{"line":277,"column":83}},"83":{"start":{"line":278,"column":8},"end":{"line":278,"column":62}},"84":{"start":{"line":281,"column":4},"end":{"line":281,"column":71}},"85":{"start":{"line":300,"column":0},"end":{"line":312,"column":1}},"86":{"start":{"line":300,"column":30},"end":{"line":300,"column":44}},"87":{"start":{"line":301,"column":1},"end":{"line":301,"column":35}},"88":{"start":{"line":302,"column":1},"end":{"line":309,"column":5}},"89":{"start":{"line":303,"column":5},"end":{"line":303,"column":68}},"90":{"start":{"line":304,"column":8},"end":{"line":304,"column":61}},"91":{"start":{"line":306,"column":9},"end":{"line":309,"column":5}},"92":{"start":{"line":307,"column":5},"end":{"line":307,"column":74}},"93":{"start":{"line":308,"column":8},"end":{"line":308,"column":62}},"94":{"start":{"line":311,"column":4},"end":{"line":311,"column":69}},"95":{"start":{"line":336,"column":0},"end":{"line":339,"column":1}},"96":{"start":{"line":338,"column":4},"end":{"line":338,"column":57}},"97":{"start":{"line":363,"column":0},"end":{"line":366,"column":1}},"98":{"start":{"line":365,"column":4},"end":{"line":365,"column":58}},"99":{"start":{"line":391,"column":0},"end":{"line":394,"column":1}},"100":{"start":{"line":393,"column":4},"end":{"line":393,"column":57}},"101":{"start":{"line":419,"column":0},"end":{"line":422,"column":1}},"102":{"start":{"line":421,"column":4},"end":{"line":421,"column":60}},"103":{"start":{"line":446,"column":0},"end":{"line":449,"column":1}},"104":{"start":{"line":448,"column":4},"end":{"line":448,"column":58}},"105":{"start":{"line":473,"column":0},"end":{"line":476,"column":1}},"106":{"start":{"line":475,"column":4},"end":{"line":475,"column":61}},"107":{"start":{"line":501,"column":0},"end":{"line":504,"column":1}},"108":{"start":{"line":503,"column":4},"end":{"line":503,"column":59}},"109":{"start":{"line":531,"column":0},"end":{"line":535,"column":1}},"110":{"start":{"line":532,"column":4},"end":{"line":534,"column":2}},"111":{"start":{"line":533,"column":2},"end":{"line":533,"column":96}},"112":{"start":{"line":559,"column":0},"end":{"line":563,"column":1}},"113":{"start":{"line":560,"column":4},"end":{"line":562,"column":2}},"114":{"start":{"line":561,"column":2},"end":{"line":561,"column":96}},"115":{"start":{"line":587,"column":0},"end":{"line":591,"column":1}},"116":{"start":{"line":588,"column":4},"end":{"line":590,"column":2}},"117":{"start":{"line":589,"column":2},"end":{"line":589,"column":97}},"118":{"start":{"line":617,"column":0},"end":{"line":621,"column":1}},"119":{"start":{"line":618,"column":4},"end":{"line":620,"column":2}},"120":{"start":{"line":619,"column":2},"end":{"line":619,"column":97}},"121":{"start":{"line":642,"column":0},"end":{"line":646,"column":1}},"122":{"start":{"line":643,"column":4},"end":{"line":645,"column":2}},"123":{"start":{"line":644,"column":2},"end":{"line":644,"column":98}},"124":{"start":{"line":667,"column":0},"end":{"line":671,"column":1}},"125":{"start":{"line":668,"column":4},"end":{"line":670,"column":2}},"126":{"start":{"line":669,"column":2},"end":{"line":669,"column":98}},"127":{"start":{"line":693,"column":0},"end":{"line":697,"column":1}},"128":{"start":{"line":694,"column":4},"end":{"line":696,"column":2}},"129":{"start":{"line":695,"column":2},"end":{"line":695,"column":96}},"130":{"start":{"line":720,"column":0},"end":{"line":724,"column":1}},"131":{"start":{"line":721,"column":4},"end":{"line":723,"column":2}},"132":{"start":{"line":722,"column":2},"end":{"line":722,"column":97}},"133":{"start":{"line":729,"column":0},"end":{"line":732,"column":1}},"134":{"start":{"line":730,"column":1},"end":{"line":730,"column":84}},"135":{"start":{"line":731,"column":1},"end":{"line":731,"column":33}},"136":{"start":{"line":737,"column":0},"end":{"line":743,"column":1}},"137":{"start":{"line":739,"column":1},"end":{"line":739,"column":115}},"138":{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},"139":{"start":{"line":741,"column":2},"end":{"line":741,"column":38}},"140":{"start":{"line":748,"column":0},"end":{"line":751,"column":1}},"141":{"start":{"line":749,"column":1},"end":{"line":749,"column":84}},"142":{"start":{"line":750,"column":1},"end":{"line":750,"column":29}},"143":{"start":{"line":756,"column":0},"end":{"line":762,"column":1}},"144":{"start":{"line":758,"column":1},"end":{"line":758,"column":115}},"145":{"start":{"line":759,"column":4},"end":{"line":761,"column":5}},"146":{"start":{"line":760,"column":2},"end":{"line":760,"column":34}},"147":{"start":{"line":767,"column":0},"end":{"line":770,"column":1}},"148":{"start":{"line":768,"column":1},"end":{"line":768,"column":84}},"149":{"start":{"line":769,"column":1},"end":{"line":769,"column":23}},"150":{"start":{"line":775,"column":0},"end":{"line":781,"column":1}},"151":{"start":{"line":777,"column":1},"end":{"line":777,"column":115}},"152":{"start":{"line":778,"column":4},"end":{"line":780,"column":5}},"153":{"start":{"line":779,"column":2},"end":{"line":779,"column":28}},"154":{"start":{"line":786,"column":0},"end":{"line":798,"column":1}},"155":{"start":{"line":788,"column":1},"end":{"line":788,"column":115}},"156":{"start":{"line":789,"column":1},"end":{"line":797,"column":2}},"157":{"start":{"line":790,"column":2},"end":{"line":790,"column":84}},"158":{"start":{"line":792,"column":2},"end":{"line":795,"column":3}},"159":{"start":{"line":793,"column":3},"end":{"line":794,"column":77}},"160":{"start":{"line":796,"column":2},"end":{"line":796,"column":115}},"161":{"start":{"line":803,"column":0},"end":{"line":806,"column":1}},"162":{"start":{"line":804,"column":1},"end":{"line":804,"column":96}},"163":{"start":{"line":805,"column":4},"end":{"line":805,"column":42}},"164":{"start":{"line":812,"column":0},"end":{"line":824,"column":1}},"165":{"start":{"line":814,"column":1},"end":{"line":814,"column":115}},"166":{"start":{"line":815,"column":4},"end":{"line":823,"column":5}},"167":{"start":{"line":816,"column":2},"end":{"line":820,"column":3}},"168":{"start":{"line":817,"column":3},"end":{"line":819,"column":53}},"169":{"start":{"line":821,"column":2},"end":{"line":821,"column":40}},"170":{"start":{"line":822,"column":2},"end":{"line":822,"column":59}},"171":{"start":{"line":829,"column":0},"end":{"line":866,"column":1}},"172":{"start":{"line":830,"column":1},"end":{"line":830,"column":34}},"173":{"start":{"line":831,"column":1},"end":{"line":831,"column":83}},"174":{"start":{"line":832,"column":1},"end":{"line":835,"column":2}},"175":{"start":{"line":833,"column":2},"end":{"line":834,"column":74}},"176":{"start":{"line":837,"column":1},"end":{"line":865,"column":4}},"177":{"start":{"line":838,"column":2},"end":{"line":864,"column":3}},"178":{"start":{"line":839,"column":3},"end":{"line":839,"column":41}},"179":{"start":{"line":841,"column":7},"end":{"line":864,"column":3}},"180":{"start":{"line":842,"column":3},"end":{"line":842,"column":70}},"181":{"start":{"line":844,"column":7},"end":{"line":864,"column":3}},"182":{"start":{"line":845,"column":3},"end":{"line":845,"column":71}},"183":{"start":{"line":847,"column":7},"end":{"line":864,"column":3}},"184":{"start":{"line":848,"column":3},"end":{"line":848,"column":46}},"185":{"start":{"line":850,"column":7},"end":{"line":864,"column":3}},"186":{"start":{"line":851,"column":3},"end":{"line":853,"column":4}},"187":{"start":{"line":852,"column":4},"end":{"line":852,"column":89}},"188":{"start":{"line":854,"column":3},"end":{"line":854,"column":39}},"189":{"start":{"line":856,"column":7},"end":{"line":864,"column":3}},"190":{"start":{"line":857,"column":3},"end":{"line":859,"column":4}},"191":{"start":{"line":858,"column":4},"end":{"line":858,"column":89}},"192":{"start":{"line":860,"column":3},"end":{"line":862,"column":4}},"193":{"start":{"line":861,"column":4},"end":{"line":861,"column":80}},"194":{"start":{"line":863,"column":3},"end":{"line":863,"column":38}}},"fnMap":{"1":{"name":"Path","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":33}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":11},"end":{"line":null,"column":-1}}},"3":{"name":"AcceptLanguage","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":11},"end":{"line":null,"column":-1}}},"5":{"name":"Accept","line":108,"loc":{"start":{"line":108,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":11},"end":{"line":null,"column":-1}}},"7":{"name":"Context","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":null,"column":-1}}},"8":{"name":"ContextRequest","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"ContextResponse","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":null,"column":-1}}},"10":{"name":"ContextNext","line":240,"loc":{"start":{"line":240,"column":0},"end":{"line":null,"column":-1}}},"11":{"name":"ContextLanguage","line":270,"loc":{"start":{"line":270,"column":0},"end":{"line":null,"column":-1}}},"12":{"name":"ContextAccept","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":null,"column":-1}}},"13":{"name":"GET","line":336,"loc":{"start":{"line":336,"column":0},"end":{"line":337,"column":31}}},"14":{"name":"POST","line":363,"loc":{"start":{"line":363,"column":0},"end":{"line":364,"column":31}}},"15":{"name":"PUT","line":391,"loc":{"start":{"line":391,"column":0},"end":{"line":392,"column":31}}},"16":{"name":"DELETE","line":419,"loc":{"start":{"line":419,"column":0},"end":{"line":420,"column":31}}},"17":{"name":"HEAD","line":446,"loc":{"start":{"line":446,"column":0},"end":{"line":447,"column":31}}},"18":{"name":"OPTIONS","line":473,"loc":{"start":{"line":473,"column":0},"end":{"line":474,"column":31}}},"19":{"name":"PATCH","line":501,"loc":{"start":{"line":501,"column":0},"end":{"line":502,"column":31}}},"20":{"name":"PathParam","line":531,"loc":{"start":{"line":531,"column":0},"end":{"line":531,"column":38}}},"21":{"name":"(anonymous_21)","line":532,"loc":{"start":{"line":532,"column":11},"end":{"line":532,"column":79}}},"22":{"name":"FileParam","line":559,"loc":{"start":{"line":559,"column":0},"end":{"line":559,"column":38}}},"23":{"name":"(anonymous_23)","line":560,"loc":{"start":{"line":560,"column":11},"end":{"line":560,"column":79}}},"24":{"name":"FilesParam","line":587,"loc":{"start":{"line":587,"column":0},"end":{"line":587,"column":39}}},"25":{"name":"(anonymous_25)","line":588,"loc":{"start":{"line":588,"column":11},"end":{"line":588,"column":79}}},"26":{"name":"QueryParam","line":617,"loc":{"start":{"line":617,"column":0},"end":{"line":617,"column":39}}},"27":{"name":"(anonymous_27)","line":618,"loc":{"start":{"line":618,"column":11},"end":{"line":618,"column":79}}},"28":{"name":"HeaderParam","line":642,"loc":{"start":{"line":642,"column":0},"end":{"line":642,"column":40}}},"29":{"name":"(anonymous_29)","line":643,"loc":{"start":{"line":643,"column":11},"end":{"line":643,"column":79}}},"30":{"name":"CookieParam","line":667,"loc":{"start":{"line":667,"column":0},"end":{"line":667,"column":40}}},"31":{"name":"(anonymous_31)","line":668,"loc":{"start":{"line":668,"column":11},"end":{"line":668,"column":79}}},"32":{"name":"FormParam","line":693,"loc":{"start":{"line":693,"column":0},"end":{"line":693,"column":38}}},"33":{"name":"(anonymous_33)","line":694,"loc":{"start":{"line":694,"column":11},"end":{"line":694,"column":79}}},"34":{"name":"Param","line":720,"loc":{"start":{"line":720,"column":0},"end":{"line":720,"column":34}}},"35":{"name":"(anonymous_35)","line":721,"loc":{"start":{"line":721,"column":11},"end":{"line":721,"column":79}}},"36":{"name":"AcceptLanguageTypeDecorator","line":729,"loc":{"start":{"line":729,"column":0},"end":{"line":729,"column":74}}},"37":{"name":"AcceptLanguageMethodDecorator","line":737,"loc":{"start":{"line":737,"column":0},"end":{"line":738,"column":54}}},"38":{"name":"AcceptTypeDecorator","line":748,"loc":{"start":{"line":748,"column":0},"end":{"line":748,"column":64}}},"39":{"name":"AcceptMethodDecorator","line":756,"loc":{"start":{"line":756,"column":0},"end":{"line":757,"column":52}}},"40":{"name":"PathTypeDecorator","line":767,"loc":{"start":{"line":767,"column":0},"end":{"line":767,"column":57}}},"41":{"name":"PathMethodDecorator","line":775,"loc":{"start":{"line":775,"column":0},"end":{"line":776,"column":47}}},"42":{"name":"processDecoratedParameter","line":786,"loc":{"start":{"line":786,"column":0},"end":{"line":787,"column":44}}},"43":{"name":"processDecoratedProperty","line":803,"loc":{"start":{"line":803,"column":0},"end":{"line":803,"column":94}}},"44":{"name":"processHttpVerb","line":812,"loc":{"start":{"line":812,"column":0},"end":{"line":813,"column":23}}},"45":{"name":"processServiceMethod","line":829,"loc":{"start":{"line":829,"column":0},"end":{"line":829,"column":101}}},"46":{"name":"(anonymous_46)","line":837,"loc":{"start":{"line":837,"column":34},"end":{"line":837,"column":39}}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":1}},{"start":{"line":43,"column":2},"end":{"line":43,"column":1}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":9}},{"start":{"line":46,"column":10},"end":{"line":46,"column":9}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":14},"end":{"line":46,"column":30}},{"start":{"line":46,"column":34},"end":{"line":46,"column":61}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":5},"end":{"line":77,"column":4}},{"start":{"line":77,"column":5},"end":{"line":77,"column":4}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":10},"end":{"line":80,"column":9}},{"start":{"line":80,"column":10},"end":{"line":80,"column":9}}]},"6":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":14},"end":{"line":80,"column":30}},{"start":{"line":80,"column":34},"end":{"line":80,"column":61}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":5},"end":{"line":111,"column":4}},{"start":{"line":111,"column":5},"end":{"line":111,"column":4}}]},"8":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":9}},{"start":{"line":114,"column":10},"end":{"line":114,"column":9}}]},"9":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":14},"end":{"line":114,"column":30}},{"start":{"line":114,"column":34},"end":{"line":114,"column":61}}]},"10":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":1},"end":{"line":143,"column":0}},{"start":{"line":143,"column":1},"end":{"line":143,"column":0}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":9},"end":{"line":147,"column":8}},{"start":{"line":147,"column":9},"end":{"line":147,"column":8}}]},"12":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":13},"end":{"line":147,"column":29}},{"start":{"line":147,"column":33},"end":{"line":147,"column":60}}]},"13":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":1},"end":{"line":176,"column":0}},{"start":{"line":176,"column":1},"end":{"line":176,"column":0}}]},"14":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":8}},{"start":{"line":180,"column":9},"end":{"line":180,"column":8}}]},"15":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":13},"end":{"line":180,"column":29}},{"start":{"line":180,"column":33},"end":{"line":180,"column":60}}]},"16":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":1},"end":{"line":209,"column":0}},{"start":{"line":209,"column":1},"end":{"line":209,"column":0}}]},"17":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":9},"end":{"line":213,"column":8}},{"start":{"line":213,"column":9},"end":{"line":213,"column":8}}]},"18":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":13},"end":{"line":213,"column":29}},{"start":{"line":213,"column":33},"end":{"line":213,"column":60}}]},"19":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":1},"end":{"line":242,"column":0}},{"start":{"line":242,"column":1},"end":{"line":242,"column":0}}]},"20":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":9},"end":{"line":246,"column":8}},{"start":{"line":246,"column":9},"end":{"line":246,"column":8}}]},"21":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":13},"end":{"line":246,"column":29}},{"start":{"line":246,"column":33},"end":{"line":246,"column":60}}]},"22":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":1},"end":{"line":272,"column":0}},{"start":{"line":272,"column":1},"end":{"line":272,"column":0}}]},"23":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":9},"end":{"line":276,"column":8}},{"start":{"line":276,"column":9},"end":{"line":276,"column":8}}]},"24":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":13},"end":{"line":276,"column":29}},{"start":{"line":276,"column":33},"end":{"line":276,"column":60}}]},"25":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":1},"end":{"line":302,"column":0}},{"start":{"line":302,"column":1},"end":{"line":302,"column":0}}]},"26":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":9},"end":{"line":306,"column":8}},{"start":{"line":306,"column":9},"end":{"line":306,"column":8}}]},"27":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":13},"end":{"line":306,"column":29}},{"start":{"line":306,"column":33},"end":{"line":306,"column":60}}]},"28":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":740,"column":3}},{"start":{"line":740,"column":4},"end":{"line":740,"column":3}}]},"29":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":4},"end":{"line":759,"column":3}},{"start":{"line":759,"column":4},"end":{"line":759,"column":3}}]},"30":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":4},"end":{"line":778,"column":3}},{"start":{"line":778,"column":4},"end":{"line":778,"column":3}}]},"31":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":1},"end":{"line":789,"column":0}},{"start":{"line":789,"column":1},"end":{"line":789,"column":0}}]},"32":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":4},"end":{"line":815,"column":3}},{"start":{"line":815,"column":4},"end":{"line":815,"column":3}}]},"33":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":2},"end":{"line":816,"column":1}},{"start":{"line":816,"column":2},"end":{"line":816,"column":1}}]},"34":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":2},"end":{"line":838,"column":1}},{"start":{"line":838,"column":2},"end":{"line":838,"column":1}}]},"35":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":7},"end":{"line":841,"column":6}},{"start":{"line":841,"column":7},"end":{"line":841,"column":6}}]},"36":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":7},"end":{"line":844,"column":6}},{"start":{"line":844,"column":7},"end":{"line":844,"column":6}}]},"37":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":7},"end":{"line":847,"column":6}},{"start":{"line":847,"column":7},"end":{"line":847,"column":6}}]},"38":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":7},"end":{"line":850,"column":6}},{"start":{"line":850,"column":7},"end":{"line":850,"column":6}}]},"39":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":3},"end":{"line":851,"column":2}},{"start":{"line":851,"column":3},"end":{"line":851,"column":2}}]},"40":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":7},"end":{"line":856,"column":6}},{"start":{"line":856,"column":7},"end":{"line":856,"column":6}}]},"41":{"line":857,"type":"if","locations":[{"start":{"line":857,"column":3},"end":{"line":857,"column":2}},{"start":{"line":857,"column":3},"end":{"line":857,"column":2}}]},"42":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":3},"end":{"line":860,"column":2}},{"start":{"line":860,"column":3},"end":{"line":860,"column":2}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":18,"8":58,"9":18,"10":18,"11":7,"12":11,"13":11,"14":0,"15":2,"16":3,"17":1,"18":2,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":2,"26":2,"27":1,"28":4,"29":1,"30":1,"31":0,"32":1,"33":1,"34":0,"35":2,"36":4,"37":1,"38":1,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":2,"46":8,"47":2,"48":2,"49":0,"50":0,"51":2,"52":2,"53":2,"54":0,"55":2,"56":4,"57":1,"58":1,"59":0,"60":0,"61":1,"62":1,"63":1,"64":0,"65":2,"66":4,"67":1,"68":1,"69":0,"70":0,"71":1,"72":1,"73":1,"74":0,"75":2,"76":4,"77":1,"78":1,"79":0,"80":0,"81":1,"82":1,"83":1,"84":0,"85":2,"86":4,"87":1,"88":1,"89":0,"90":0,"91":1,"92":1,"93":1,"94":0,"95":2,"96":12,"97":2,"98":4,"99":2,"100":2,"101":2,"102":0,"103":2,"104":0,"105":2,"106":0,"107":2,"108":0,"109":2,"110":1,"111":1,"112":2,"113":1,"114":1,"115":2,"116":0,"117":0,"118":2,"119":3,"120":3,"121":2,"122":1,"123":1,"124":2,"125":1,"126":1,"127":2,"128":1,"129":1,"130":2,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":1,"144":1,"145":1,"146":1,"147":1,"148":7,"149":7,"150":1,"151":11,"152":11,"153":11,"154":1,"155":15,"156":15,"157":15,"158":15,"159":16,"160":15,"161":1,"162":1,"163":1,"164":1,"165":18,"166":18,"167":18,"168":0,"169":18,"170":18,"171":1,"172":18,"173":18,"174":18,"175":1,"176":18,"177":17,"178":1,"179":16,"180":1,"181":15,"182":0,"183":15,"184":1,"185":14,"186":1,"187":0,"188":1,"189":13,"190":2,"191":0,"192":2,"193":0,"194":2},"b":{"1":[7,11],"2":[11,0],"3":[11,11],"4":[1,0],"5":[0,0],"6":[0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[0,0],"12":[0,0],"13":[0,2],"14":[2,0],"15":[2,2],"16":[0,1],"17":[1,0],"18":[1,1],"19":[0,1],"20":[1,0],"21":[1,1],"22":[0,1],"23":[1,0],"24":[1,1],"25":[0,1],"26":[1,0],"27":[1,1],"28":[0,0],"29":[1,0],"30":[11,0],"31":[15,0],"32":[18,0],"33":[0,18],"34":[1,16],"35":[1,15],"36":[0,15],"37":[1,14],"38":[1,13],"39":[0,1],"40":[2,11],"41":[0,2],"42":[0,2]},"f":{"1":18,"2":18,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":1,"12":1,"13":12,"14":4,"15":2,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":3,"27":3,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":0,"38":0,"39":1,"40":7,"41":11,"42":15,"43":1,"44":18,"45":18,"46":17},"code":"\"use strict\";\n\nimport {InternalServer} from \"./server-container\"\nimport {HttpMethod, ServiceContext} from \"./server-types\"\nimport * as metadata from \"./metadata\"\n\nimport \"reflect-metadata\";\nimport * as _ from \"lodash\";\n\n/**\n * A decorator to tell the [[Server]] that a class or a method \n * should be bound to a given path.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ PUT\n *   @ Path(\":id\")\n *   savePerson(person:Person) {\n *      // ...\n *   }\n * \n *   @ GET\n *   @ Path(\":id\")\n *   getPerson():Person {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create services that listen for requests like:\n *\n * ```\n * PUT http://mydomain/people/123 or\n * GET http://mydomain/people/123 \n * ```\n */\nexport function Path(path: string) {\n    return function (...args: any[]) {\n\t\targs = _.without(args, undefined);\n\t\tif (args.length == 1) {\n\t        return PathTypeDecorator.apply(this, [args[0], path]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return PathMethodDecorator.apply(this, [args[0], args[1], args[2], path]);\n\t    }\n\n\t    throw new Error(\"Invalid @Path Decorator declaration.\");\n\t}\n}\n\n/**\n * A decorator to tell the [[Server]] that a class or a method \n * should only accept requests from clients that accepts one of \n * the supported languages.\n * \n * For example:\n *\n * ```\n * @ Path(\"accept\")\n * @ AcceptLanguage(\"en\", \"pt-BR\")\n * class TestAcceptService {\n *      // ...\n * }\n * ```\n *\n * Will reject requests that only accepts languages that are not\n * English or Brazilian portuguese\n *\n * If the language requested is not supported, a status code 406 returned\n */\nexport function AcceptLanguage(...languages: string[]) {\n    return function (...args: any[]) {\n\t\targs = _.without(args, undefined);\n\t    if (args.length == 1) {\n\t        return AcceptLanguageTypeDecorator.apply(this, [args[0], languages]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return AcceptLanguageMethodDecorator.apply(this, [args[0], args[1], args[2], languages]);\n\t    }\n\n\t    throw new Error(\"Invalid @AcceptLanguage Decorator declaration.\");\n\t}\n}\n\n/**\n * A decorator to tell the [[Server]] that a class or a method \n * should only accept requests from clients that accepts one of \n * the supported mime types.\n * \n * For example:\n *\n * ```\n * @ Path(\"accept\")\n * @ Accept(\"application/json\")\n * class TestAcceptService {\n *      // ...\n * }\n * ```\n *\n * Will reject requests that only accepts mime types that are not\n * \"application/json\"\"\n *\n * If the mime type requested is not supported, a status code 406 returned\n */\nexport function Accept(...accepts: string[]) {\n    return function (...args: any[]) {\n\t\targs = _.without(args, undefined);\n\t    if (args.length == 1) {\n\t        return AcceptTypeDecorator.apply(this, [args[0], accepts]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return AcceptMethodDecorator.apply(this, [args[0], args[1], args[2], accepts]);\n\t    }\n\n\t    throw new Error(\"Invalid @Accept Decorator declaration.\");\n\t}\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * [[ServiceContext]] object associated to the current request.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ Context\n\t context: ServiceContext;\n *       // ...\n * }\n * ```\n *\n * The field context on the above class will point to the current \n * [[ServiceContext]] instance.\n */\nexport function Context(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * the current request.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ ContextRequest\n\t request: express.Request;\n *       // ...\n * }\n * ```\n *\n * The field request on the above class will point to the current \n * request.\n */\nexport function ContextRequest(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context_request]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context_request, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @ContextRequest Decorator declaration.\");\t\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * the current response object.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ ContextResponse\n\t response: express.Response;\n *       // ...\n * }\n * ```\n *\n * The field response on the above class will point to the current \n * response object.\n */\nexport function ContextResponse(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context_response]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context_response, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @ContextResponse Decorator declaration.\");\t\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * the next function.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ ContextNext \n *   next: express.NextFunction\n *       // ...\n * }\n * ```\n *\n * The next function can be used to delegate to the next registered \n * middleware the current request processing.\n */\nexport function ContextNext(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context_next]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context_next, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @ContextNext Decorator declaration.\");\t\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * the current context language.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ ContextLanguage \n *   language: string\n *       // ...\n * }\n * ```\n */\nexport function ContextLanguage(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context_accept_language]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context_accept_language, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @ContextLanguage Decorator declaration.\");\t\n}\n\n/**\n * A decorator to be used on class properties or on service method arguments\n * to inform that the decorated property or argument should be bound to the\n * the preferred media type for the current request.\n * \n * For example:\n *\n * ```\n * @ Path(\"context\")\n * class TestService {\n *   @ ContextAccept \n *   media: string\n *       // ...\n * }\n * ```\n */\nexport function ContextAccept(...args: any[]) {\n\targs = _.without(args, undefined);\n\tif (args.length == 2){\n    \tlet newArgs = args.concat([metadata.ParamType.context_accept]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([metadata.ParamType.context_accept, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @ContextAccept Decorator declaration.\");\t\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP GET requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople() {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * GET http://mydomain/people \n * ```\n */\nexport function GET(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor){\n    processHttpVerb(target, propertyKey, HttpMethod.GET);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP POST requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ POST\n *   addPerson() {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * POST http://mydomain/people \n * ```\n */\nexport function POST(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.POST);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP PUT requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ PUT\n *   @ Path(\":id\")\n *   savePerson(person: Person) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * PUT http://mydomain/people/123 \n * ```\n */\nexport function PUT(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.PUT);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP DELETE requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ DELETE\n *   @ Path(\":id\")\n *   removePerson(@ PathParam(\"id\")id: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * PUT http://mydomain/people/123 \n * ```\n */\nexport function DELETE(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.DELETE);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP HEAD requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ HEAD\n *   headPerson() {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * HEAD http://mydomain/people/123 \n * ```\n */\nexport function HEAD(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.HEAD);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP OPTIONS requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ OPTIONS\n *   optionsPerson() {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * OPTIONS http://mydomain/people/123 \n * ```\n */\nexport function OPTIONS(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.OPTIONS);\n}\n\n/**\n * A decorator to tell the [[Server]] that a method \n * should be called to process HTTP PATCH requests.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ PATCH\n *   @ Path(\":id\")\n *   savePerson(person: Person) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * PATCH http://mydomain/people/123 \n * ```\n */\nexport function PATCH(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.PATCH);\n}\n\n/**\n * Creates a mapping between a fragment of the requested path and \n * a method argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   @ Path(\":id\")\n *   getPerson(@ PathParam(\"id\") id: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * GET http://mydomain/people/123 \n * ```\n * \n * And pass 123 as the id argument on getPerson method's call.\n */\nexport function PathParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.path, name);\n\t}\n}\n\n/**\n * Creates a mapping between a file on a multipart request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ POST\n *   @ Path(\"id\")\n *   addAvatar(@ PathParam(\"id\") id: string,\n *             @ FileParam(\"avatar\") file: Express.Multer.File) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * file with name \"avatar\" on the requested form to the file \n * argument on addAvatar method's call.\n */\nexport function FileParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.file, name);\n\t}\n}\n\n/**\n * Creates a mapping between a list of files on a multipart request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ POST\n *   @ Path(\"id\")\n *   addAvatar(@ PathParam(\"id\") id: string,\n *             @ FilesParam(\"avatar\") Array<file>: Express.Multer.File) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * files with name \"avatar\" on the request form to the file\n * argument on addAvatar method's call.\n */\nexport function FilesParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.files, name);\n\t}\n}\n\n/**\n * Creates a mapping between a query parameter on request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople(@ QueryParam(\"name\") name: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests like:\n *\n * ```\n * GET http://mydomain/people?name=joe \n * ```\n * \n * And pass \"joe\" as the name argument on getPerson method's call.\n */\nexport function QueryParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.query, name);\n\t}\n}\n\n/**\n * Creates a mapping between a header on request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople(@ HeaderParam(\"header\") header: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * header called \"header\" to the header argument on getPerson method's call.\n */\nexport function HeaderParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.header, name);\n\t}\n}\n\n/**\n * Creates a mapping between a cookie on request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople(@ CookieParam(\"cookie\") cookie: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * cookie called \"cookie\" to the cookie argument on getPerson method's call.\n */\nexport function CookieParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.cookie, name);\n\t}\n}\n\n/**\n * Creates a mapping between a form parameter on request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople(@ FormParam(\"name\") name: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * request paramenter called \"name\" to the name argument on getPerson \n * method's call.\n */\nexport function FormParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.form, name);\n\t}\n}\n\n/**\n * Creates a mapping between a parameter on request and a method\n * argument.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ GET\n *   getPeople(@ Param(\"name\") name: string) {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create a service that listen for requests and bind the \n * request paramenter called \"name\" to the name argument on getPerson \n * method's call. It will work to query parameters or form parameters \n * received in the current request.\n */\nexport function Param(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.param, name);\n\t}\n}\n\n/**\n * Decorator processor for [[AcceptLanguage]] decorator on classes\n */\nfunction AcceptLanguageTypeDecorator(target: Function, languages: string[]) {\n\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.languages = languages;\n}\n\n/**\n * Decorator processor for [[AcceptLanguage]] decorator on methods\n */\nfunction AcceptLanguageMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, languages: string[]) {\n\tlet serviceMethod: metadata.ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.languages = languages;\n    }\n}\n\n/**\n * Decorator processor for [[Accept]] decorator on classes\n */\nfunction AcceptTypeDecorator(target: Function, accepts: string[]) {\n\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.accepts = accepts;\n}\n\n/**\n * Decorator processor for [[Accept]] decorator on methods\n */\nfunction AcceptMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, accepts: string[]) {\n\tlet serviceMethod: metadata.ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.accepts = accepts;\n    }\n}\n\n/**\n * Decorator processor for [[Path]] decorator on classes\n */\nfunction PathTypeDecorator(target: Function, path: string) {\n\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.path = path;\n}\n\n/**\n * Decorator processor for [[Path]] decorator on methods\n */\nfunction PathMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, path: string) {\n\tlet serviceMethod: metadata.ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.path = path;\n    }\n}\n\n/**\n * Decorator processor for parameter annotations on methods\n */\nfunction processDecoratedParameter(target: Object, propertyKey: string, parameterIndex: number, \n\tparamType: metadata.ParamType, name: string) {\n\tlet serviceMethod: metadata.ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n\tif (serviceMethod) { // does not intercept constructor\n\t\tlet paramTypes = Reflect.getOwnMetadata(\"design:paramtypes\", target, propertyKey);\n\n\t\twhile (serviceMethod.parameters.length < paramTypes.length) {\n\t\t\tserviceMethod.parameters.push(new metadata.MethodParam(null, \n\t\t\t\t\t\tparamTypes[serviceMethod.parameters.length], metadata.ParamType.body));\n\t\t}\n\t\tserviceMethod.parameters[parameterIndex] = new metadata.MethodParam(name, paramTypes[parameterIndex], paramType);\n\t}\n}\n\n/**\n * Decorator processor for annotations on properties\n */\nfunction processDecoratedProperty(target: Function, key: string, paramType: metadata.ParamType) {\n\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target.constructor);\n    classData.addProperty(key, paramType);\n}\n\n\n/**\n * Decorator processor for HTTP verb annotations on methods\n */\nfunction processHttpVerb(target: any, propertyKey: string,\n\thttpMethod: HttpMethod) {\n\tlet serviceMethod: metadata.ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tif (serviceMethod.httpMethod) {\n\t\t\tthrow new Error(\"Method is already annotated with @\" +\n\t\t\t\tserviceMethod.httpMethod +\n\t\t\t\t\". You can only map a method to one HTTP verb.\");\n\t\t}\n\t\tserviceMethod.httpMethod = httpMethod;\n\t\tprocessServiceMethod(target, propertyKey, serviceMethod);\n    }\n}\n\n/**\n * Extract metadata for rest methods\n */\nfunction processServiceMethod(target: any, propertyKey: string, serviceMethod: metadata.ServiceMethod) {\n\tserviceMethod.name = propertyKey;\n\tlet paramTypes = Reflect.getOwnMetadata(\"design:paramtypes\", target, propertyKey);\n\twhile (paramTypes.length > serviceMethod.parameters.length) {\n\t\tserviceMethod.parameters.push(new metadata.MethodParam(null,\n\t\t\tparamTypes[serviceMethod.parameters.length], metadata.ParamType.body));\n\t}\n\n\tserviceMethod.parameters.forEach(param => {\n\t\tif (param.paramType == metadata.ParamType.cookie) {\n\t\t\tserviceMethod.mustParseCookies = true;\n\t\t}\n\t\telse if (param.paramType == metadata.ParamType.file) {\n\t\t\tserviceMethod.files.push(new metadata.FileParam(param.name, true));\n\t\t}\n\t\telse if (param.paramType == metadata.ParamType.files) {\n\t\t\tserviceMethod.files.push(new metadata.FileParam(param.name, false));\n\t\t}\n\t\telse if (param.paramType == metadata.ParamType.param) {\n\t\t\tserviceMethod.acceptMultiTypedParam = true;\n\t\t}\n\t\telse if (param.paramType == metadata.ParamType.form) {\n\t\t\tif (serviceMethod.mustParseBody) {\n\t\t\t\tthrow Error(\"Can not use form parameters with a body parameter on the same method.\");\n\t\t\t}\n\t\t\tserviceMethod.mustParseForms = true;\n\t\t}\n\t\telse if (param.paramType == metadata.ParamType.body) {\n\t\t\tif (serviceMethod.mustParseForms) {\n\t\t\t\tthrow Error(\"Can not use form parameters with a body parameter on the same method.\");\n\t\t\t}\n\t\t\tif (serviceMethod.mustParseBody) {\n\t\t\t\tthrow Error(\"Can not use more than one body parameter on the same method.\");\n\t\t\t}\n\t\t\tserviceMethod.mustParseBody = true;\n\t\t}\n\t});\n}","l":{"3":1,"4":1,"5":1,"7":1,"8":1,"40":2,"41":58,"42":18,"43":18,"44":7,"46":11,"47":11,"50":0,"74":3,"75":2,"76":1,"77":1,"78":1,"80":0,"81":0,"84":0,"108":2,"109":4,"110":1,"111":1,"112":0,"114":1,"115":1,"118":0,"141":4,"142":1,"143":1,"144":1,"145":1,"147":0,"148":0,"149":0,"152":0,"174":8,"175":2,"176":2,"177":0,"178":0,"180":2,"181":2,"182":2,"185":0,"207":4,"208":1,"209":1,"210":0,"211":0,"213":1,"214":1,"215":1,"218":0,"240":4,"241":1,"242":1,"243":0,"244":0,"246":1,"247":1,"248":1,"251":0,"270":4,"271":1,"272":1,"273":0,"274":0,"276":1,"277":1,"278":1,"281":0,"300":4,"301":1,"302":1,"303":0,"304":0,"306":1,"307":1,"308":1,"311":0,"336":2,"338":12,"363":2,"365":4,"391":2,"393":2,"419":2,"421":0,"446":2,"448":0,"473":2,"475":0,"501":2,"503":0,"531":2,"532":1,"533":1,"559":2,"560":1,"561":1,"587":2,"588":0,"589":0,"617":2,"618":3,"619":3,"642":2,"643":1,"644":1,"667":2,"668":1,"669":1,"693":2,"694":1,"695":1,"720":2,"721":1,"722":1,"729":1,"730":1,"731":1,"737":1,"739":0,"740":0,"741":0,"748":1,"749":0,"750":0,"756":1,"758":1,"759":1,"760":1,"767":1,"768":7,"769":7,"775":1,"777":11,"778":11,"779":11,"786":1,"788":15,"789":15,"790":15,"792":15,"793":16,"796":15,"803":1,"804":1,"805":1,"812":1,"814":18,"815":18,"816":18,"817":0,"821":18,"822":18,"829":1,"830":18,"831":18,"832":18,"833":1,"837":18,"838":17,"839":1,"841":16,"842":1,"844":15,"845":0,"847":15,"848":1,"850":14,"851":1,"852":0,"854":1,"856":13,"857":2,"858":0,"860":2,"861":0,"863":2}}}
