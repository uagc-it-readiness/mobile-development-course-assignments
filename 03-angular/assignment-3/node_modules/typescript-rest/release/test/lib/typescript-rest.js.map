{"version":3,"sources":["typescript-rest.js","../../src/lib/typescript-rest.ts"],"names":["__export","m","p","exports","hasOwnProperty","path","require","fs","Errors","Return","server_1","CONFIG_FILE","join","process","cwd","existsSync","config","readJSONSync","useIoC","Server","serviceFactory","indexOf","registerServiceFactory"],"mappings":";;;;;;;;AACA,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AAAA,I,sCAAA;AAAA,I,sCAAA;AAAA,IACjB,SAASC,CAAT,IAAcD,CAAd,E;;QAAiB,IAAI,CAACE,OAAA,CAAQC,cAAR,CAAuBF,CAAvB,CAAL,E;;;YAAgCC,OAAA,CAAQD,CAAR,IAAaD,CAAA,CAAEC,CAAF,CAAb,C;SAAhC,M;;;KADA;AAAA,C;;ACCrB,IAAAG,IAAA,GAAAC,OAAA,CAAA,MAAA,CAAA,C;;AACA,IAAAC,EAAA,GAAAD,OAAA,CAAA,UAAA,CAAA,C;;AAEA,IAAAE,MAAA,GAAAF,OAAA,CAAA,iBAAA,CAAA,C;;AASQH,OAAA,CAAAK,MAAA,GAAAA,MAAA,C;;AARR,IAAAC,MAAA,GAAAH,OAAA,CAAA,iBAAA,CAAA,C;;AAOQH,OAAA,CAAAM,MAAA,GAAAA,MAAA,C;;AANR,IAAAC,QAAA,GAAAJ,OAAA,CAAA,UAAA,CAAA,C;;AAEAN,QAAA,CAAAM,OAAA,CAAA,cAAA,CAAA,E;;AACAN,QAAA,CAAAM,OAAA,CAAA,gBAAA,CAAA,E;;AACAN,QAAA,CAAAM,OAAA,CAAA,UAAA,CAAA,E;;AAKA,IAAMK,WAAA,GAAcN,IAAA,CAAKO,IAAL,CAAUC,OAAA,CAAQC,GAAR,EAAV,EAAyB,aAAzB,CAApB,C;;AACA,IAAIP,EAAA,CAAGQ,UAAH,CAAcJ,WAAd,CAAJ,EAAgC;AAAA,I,yCAAA;AAAA,I,uCAAA;AAAA,IAC5B,IAAIK,MAAA,GAAST,EAAA,CAAGU,YAAH,CAAgBN,WAAhB,CAAb,CAD4B;AAAA,I,uCAAA;AAAA,IAE5B,IAAIK,MAAA,CAAOE,MAAX,EAAmB;AAAA,Q,yCAAA;AAAA,Q,uCAAA;AAAA,QACfR,QAAA,CAAAS,MAAA,CAAOD,MAAP,GADe;AAAA,KAAnB,M;;;QAEO,IAAIF,MAAA,CAAOI,cAAX,EAA2B;AAAA,Y,yCAAA;AAAA,Y,uCAAA;AAAA,YAC9B,IAAIJ,MAAA,CAAOI,cAAP,CAAsBC,OAAtB,CAA8B,GAA9B,MAAuC,CAA3C,EAA8C;AAAA,gB,yCAAA;AAAA,gB,uCAAA;AAAA,gBAC1CL,MAAA,CAAOI,cAAP,GAAwBf,IAAA,CAAKO,IAAL,CAAUC,OAAA,CAAQC,GAAR,EAAV,EAAyBE,MAAA,CAAOI,cAAhC,CAAxB,CAD0C;AAAA,aAA9C,M;;aAD8B;AAAA,Y,uCAAA;AAAA,YAI9B,IAAMA,cAAA,GAAiBd,OAAA,CAAQU,MAAA,CAAOI,cAAf,CAAvB,CAJ8B;AAAA,Y,uCAAA;AAAA,YAK9BV,QAAA,CAAAS,MAAA,CAAOG,sBAAP,CAA8BF,cAA9B,EAL8B;AAAA,SAA3B,M;;;KAJqB;AAAA,CAAhC,M","file":"typescript-rest.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar path = require(\"path\");\nvar fs = require(\"fs-extra\");\nvar Errors = require(\"./server-errors\");\nexports.Errors = Errors;\nvar Return = require(\"./server-return\");\nexports.Return = Return;\nvar server_1 = require(\"./server\");\n__export(require(\"./decorators\"));\n__export(require(\"./server-types\"));\n__export(require(\"./server\"));\nvar CONFIG_FILE = path.join(process.cwd(), 'rest.config');\nif (fs.existsSync(CONFIG_FILE)) {\n    var config = fs.readJSONSync(CONFIG_FILE);\n    if (config.useIoC) {\n        server_1.Server.useIoC();\n    }\n    else if (config.serviceFactory) {\n        if (config.serviceFactory.indexOf('.') === 0) {\n            config.serviceFactory = path.join(process.cwd(), config.serviceFactory);\n        }\n        var serviceFactory = require(config.serviceFactory);\n        server_1.Server.registerServiceFactory(serviceFactory);\n    }\n}\n","\"use strict\";\n\nimport * as path from \"path\";\nimport * as fs from \"fs-extra\";\n\nimport * as Errors from \"./server-errors\";\nimport * as Return from \"./server-return\";\nimport {Server} from \"./server\";\n\nexport * from \"./decorators\";\nexport * from \"./server-types\";\nexport * from \"./server\";\n\nexport {Return};\nexport {Errors};\n\nconst CONFIG_FILE = path.join(process.cwd(), 'rest.config');\nif (fs.existsSync(CONFIG_FILE)) {\n    let config = fs.readJSONSync(CONFIG_FILE);\n    if (config.useIoC) {\n        Server.useIoC();\n    } else if (config.serviceFactory) {\n        if (config.serviceFactory.indexOf('.') === 0) {\n            config.serviceFactory = path.join(process.cwd(), config.serviceFactory);\n        }\n        const serviceFactory = require(config.serviceFactory);\n        Server.registerServiceFactory(serviceFactory);\n    }\n}"]}