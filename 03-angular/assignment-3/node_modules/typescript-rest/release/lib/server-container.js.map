{"version":3,"sources":["../../src/lib/server-container.ts"],"names":[],"mappings":"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","file":"server-container.js","sourcesContent":["/// <reference path=\"./collections.d.ts\" />\n\"use strict\";\n\nimport * as express from \"express\"; \nimport * as bodyParser from \"body-parser\"; \nimport * as cookieParser from \"cookie-parser\";\nimport * as multer from \"multer\";\nimport * as metadata from \"./metadata\";\nimport * as Errors from \"./server-errors\";\nimport * as _ from \"lodash\";\n\nimport {HttpMethod, ServiceContext, ReferencedResource, ServiceFactory} from \"./server-types\";\nimport {DownloadResource, DownloadBinaryData} from \"./server-return\";\n\nexport class InternalServer {\n\tstatic serverClasses: Map<string,metadata.ServiceClass> = new Map<string,metadata.ServiceClass>();\n\tstatic paths: Map<string,Set<HttpMethod>> = new Map<string,Set<HttpMethod>>();\n\tstatic pathsResolved: boolean = false;\n\tstatic cookiesSecret: string;\n\tstatic cookiesDecoder: (val: string) => string;\n\tstatic fileDest: string;\n\tstatic fileFilter: (req: Express.Request, file: Express.Multer.File, callback: (error: Error, acceptFile: boolean) => void) => void;\n\tstatic fileLimits: number;\n\tstatic serviceFactory: ServiceFactory = {\n\t\tcreate: (serviceClass: Function) => {\n\t\t\tlet serviceObject = Object.create(serviceClass.prototype);\n\t\t\tserviceClass.apply(serviceObject);\n\t\t\treturn serviceObject;\n\t\t},\n\t\tgetTargetClass: (serviceClass: Function) => {\n\t\t\treturn <FunctionConstructor>serviceClass;\n\t\t}\n\t}\n\n\trouter: express.Router;\n\tupload: multer.Instance; \n\n\tconstructor(router: express.Router) {\n\t\tthis.router = router;\n\t }\n\n\tstatic registerServiceClass(target: Function): metadata.ServiceClass {\n\t\tInternalServer.pathsResolved = false;\n\t\ttarget = InternalServer.serviceFactory.getTargetClass(target);\n\t\tlet name: string = target['name'] || target.constructor['name'];\n\t\tif (!InternalServer.serverClasses.has(name)) {\n\t\t\tInternalServer.serverClasses.set(name, new metadata.ServiceClass(target));\n\t\t}\n\t\tlet serviceClass: metadata.ServiceClass = InternalServer.serverClasses.get(name);\n\t\treturn serviceClass;\n\t}\n\n\tstatic registerServiceMethod(target: Function, methodName: string): metadata.ServiceMethod {\n\t\tif (methodName) {\n\t\t\tInternalServer.pathsResolved = false;\n\t\t\tlet classData: metadata.ServiceClass = InternalServer.registerServiceClass(target);\n\t\t\tif (!classData.methods.has(methodName)) {\n\t\t\t\tclassData.methods.set(methodName, new metadata.ServiceMethod());\n\t\t\t}\n\t\t\tlet serviceMethod: metadata.ServiceMethod = classData.methods.get(methodName);\n\t\t\treturn serviceMethod;\n\t\t}\n\t\treturn null;\n\t}\n\n\tbuildServices(types?: Array<Function>) {\n\t\tif (types) {\n\t\t\ttypes = types.map(type => InternalServer.serviceFactory.getTargetClass(type));\n\t\t}\n\t\tInternalServer.serverClasses.forEach(classData => { \n\t\t\tclassData.methods.forEach(method => {\n\t\t\t\tif (this.validateTargetType(classData.targetClass, types)) {\n\t\t\t\t\tthis.buildService(classData, method);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tInternalServer.pathsResolved = true;\n\t\tthis.handleNotAllowedMethods();\n\t}\n\n\tbuildService(serviceClass: metadata.ServiceClass, serviceMethod: metadata.ServiceMethod) {\n\t\tlet handler = (req, res, next) => {\n\t\t\tthis.callTargetEndPoint(serviceClass, serviceMethod, req, res, next);\n\t\t};\n\n\t\tif (!serviceMethod.resolvedPath) {\n\t\t\tInternalServer.resolveProperties(serviceClass, serviceMethod);\n\t\t}\n\n\t\tlet middleware: Array<express.RequestHandler> = this.buildServiceMiddleware(serviceMethod);\n\t\tlet args: any[] = [serviceMethod.resolvedPath];\n\t\targs = args.concat(middleware);\n\t\targs.push(handler);\n\t\tswitch (serviceMethod.httpMethod) {\n\t\t \tcase HttpMethod.GET:\n\t\t\t\tthis.router.get.apply(this.router, args);\n\t\t \tbreak;\n\t\t\tcase HttpMethod.POST:\n\t\t\t\tthis.router.post.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PUT:\n\t\t\t\tthis.router.put.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.DELETE:\n\t\t\t\tthis.router.delete.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.HEAD:\n\t\t\t\tthis.router.head.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.OPTIONS:\n\t\t\t\tthis.router.options.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PATCH:\n\t\t\t\tthis.router.patch.apply(this.router, args);\n\t\t\tbreak;\n\n\t\t \tdefault:\n\t\t\t\tthrow Error(\"Invalid http method for service [\" + serviceMethod.resolvedPath + \"]\");\n\t\t }\n\t}\n\n\tprivate validateTargetType(targetClass: Function, types: Array<Function>): boolean {\n\t\tif (types && types.length > 0){\n\t\t\treturn (types.indexOf(targetClass) > -1);\n\t\t}\n\t\treturn true\n\t}\n\n\tprivate handleNotAllowedMethods() {\n\t\tlet paths: Set<string> = InternalServer.getPaths();\n\t\tpaths.forEach((path)=>{\n\t\t\tlet supported : Set<HttpMethod> = InternalServer.getHttpMethods(path);\n\t\t\tlet allowedMethods: Array<string> = new Array<string>();\n\t\t\tsupported.forEach((method: HttpMethod) => {\n\t\t\t\tallowedMethods.push(HttpMethod[method]);\n\t\t\t});\n\t\t\tlet allowed: string = allowedMethods.join(', '); \n\t\t\tthis.router.all(path, (req: express.Request, res: express.Response, next: express.NextFunction) => {\n\t\t\t\tres.set('Allow', allowed);\n\t\t\t\tthrow new Errors.MethodNotAllowedError();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getUploader(): multer.Instance {\n\t\tif (!this.upload) {\n\t\t\tlet options : multer.Options= {};\n\t\t\tif (InternalServer.fileDest) {\n\t\t\t\toptions.dest = InternalServer.fileDest;\n\t\t\t}\n\t\t\tif (InternalServer.fileFilter) {\n\t\t\t\toptions.fileFilter = InternalServer.fileFilter;\n\t\t\t}\n\t\t\tif (InternalServer.fileLimits) {\n\t\t\t\toptions.limits = InternalServer.fileLimits;\n\t\t\t}\n\t\t\tif (options.dest) {\n\t\t\t\tthis.upload = multer(options);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.upload = multer();\n\t\t\t}\n\t\t}\n\t\treturn this.upload;\n\t} \n\n\tprivate buildServiceMiddleware(serviceMethod: metadata.ServiceMethod): Array<express.RequestHandler> {\n\t\tlet result: Array<express.RequestHandler> = new Array<express.RequestHandler>();\n\n\t\tif (serviceMethod.mustParseCookies) {\n\t\t\tlet args = [];\n\t\t\tif (InternalServer.cookiesSecret) {\n\t\t\t\targs.push(InternalServer.cookiesSecret);\n\t\t\t}\n\t\t\tif (InternalServer.cookiesDecoder){\n\t\t\t\targs.push({ decode: InternalServer.cookiesDecoder });\n\t\t\t}\n\t\t\tresult.push(cookieParser.apply(this, args));\n\t\t}\n\t\tif (serviceMethod.mustParseBody) {\n\t\t\tresult.push(bodyParser.json());\n\t\t\t//TODO adicionar parser de XML para o body\n\t\t}\n\t\tif (serviceMethod.mustParseForms || serviceMethod.acceptMultiTypedParam) {\n\t\t\tresult.push(bodyParser.urlencoded({ extended: true }));\n\t\t}\n\t\tif (serviceMethod.files.length > 0) {\n\t\t\tlet options: Array<multer.Field> = new Array<multer.Field>();\n\t\t\tserviceMethod.files.forEach(fileData => {\n\t\t\t\tif (fileData.singleFile) {\n\t\t\t\t\toptions.push({\"name\": fileData.name,  \"maxCount\": 1});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions.push({\"name\": fileData.name});\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult.push(this.getUploader().fields(options));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate processResponseHeaders(serviceMethod: metadata.ServiceMethod, context: ServiceContext) {\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\tif (serviceMethod.httpMethod === HttpMethod.GET) {\n\t\t\t\tcontext.response.vary(\"Accept-Language\");\n\t\t\t}\n\t\t\tcontext.response.set(\"Content-Language\", context.language);\n\t\t}\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\tcontext.response.vary(\"Accept\");\n\t\t}\n\t}\n\n\tprivate checkAcceptance(serviceMethod: metadata.ServiceMethod, context: ServiceContext): void{\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\t let lang: any = context.request.acceptsLanguages(serviceMethod.resolvedLanguages);\n\t\t\t if (lang) {\n\t\t\t\t context.language = <string> lang;\n\t\t\t }\n\t\t}\n\t\telse {\n\t\t\t let languages: string[] = context.request.acceptsLanguages();\n\t\t\t if (languages && languages.length > 0) {\n\t\t\t\t context.language = languages[0];\n\t\t\t }\n\t\t}\n\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\t let accept: any = context.request.accepts(serviceMethod.resolvedAccepts);\n\t\t\t if (accept) {\n\t\t\t\t context.accept = <string> accept;\n\t\t\t }\n\t\t\t else {\n\t\t\t \tthrow new Errors.NotAcceptableError(\"Accept\");\n\t\t\t }\n\t\t}\n\n\t\tif (!context.language) {\n\t\t \tthrow new Errors.NotAcceptableError(\"Accept-Language\");\n\t\t}\n\t}\n\n\tprivate createService(serviceClass: metadata.ServiceClass, context: ServiceContext) {\n\t\tlet serviceObject = InternalServer.serviceFactory.create(serviceClass.targetClass);\n\t\tif (serviceClass.hasProperties()) {\n\t\t\tserviceClass.properties.forEach((paramType, key) => {\n\t\t\t\tswitch (paramType) {\n\t\t\t\t\tcase metadata.ParamType.context:\n\t\t\t\t\t\tserviceObject[key] = context;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_accept_language:\n\t\t\t\t\t\tserviceObject[key] = context.language;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_accept:\n\t\t\t\t\t\tserviceObject[key] = context.accept;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_request:\n\t\t\t\t\t\tserviceObject[key] = context.request;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_response:\n\t\t\t\t\t\tserviceObject[key] = context.response;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase metadata.ParamType.context_next:\n\t\t\t\t\t\tserviceObject[key] = context.next;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn serviceObject;\n\t}\n\n\tprivate callTargetEndPoint(serviceClass: metadata.ServiceClass, serviceMethod: metadata.ServiceMethod, \n\t\treq: express.Request, res: express.Response, next: express.NextFunction) {\n\t\tlet context: ServiceContext = new ServiceContext();\n\t\tcontext.request = req;\n\t\tcontext.response = res;\n\t\tcontext.next = next;\n\n\t\tthis.checkAcceptance(serviceMethod, context);\n\t\tlet serviceObject = this.createService(serviceClass, context);\n\t\tlet args = this.buildArgumentsList(serviceMethod, context);\n\t\tlet toCall = serviceClass.targetClass.prototype[serviceMethod.name] || serviceClass.targetClass[serviceMethod.name];\n\t\tlet result = toCall.apply(serviceObject, args);\n\t\tthis.processResponseHeaders(serviceMethod, context);\n\t\tthis.sendValue(result, res, next);\n\t}\n\n\tprivate sendValue(value: any, res: express.Response, next: express.NextFunction) {\n\t\tswitch (typeof value) {\n\t\t\tcase \"number\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"string\":\n\t\t\t\tres.send(value);\n\t\t\t\tbreak;\n\t\t\tcase \"boolean\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"undefined\":\n\t\t\t\tif (!res.headersSent) {\n\t\t\t\t\tres.sendStatus(204);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (value.filePath && value instanceof DownloadResource) {\n\t\t\t\t\tres.download(value.filePath, value.fileName);\n\t\t\t\t}\n\t\t\t\telse if (value instanceof DownloadBinaryData) {\n\t\t\t\t\tres.writeHead(200, {\n\t\t\t\t\t\t'Content-Type': value.mimeType,\n\t\t\t\t\t\t'Content-disposition': 'attachment;filename=' + value.fileName,\n\t\t\t\t\t\t'Content-Length': value.content.length\n\t\t\t\t\t});\n\t\t\t\t\tres.end(value.content);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (value.location && value instanceof ReferencedResource) {\n\t\t\t\t\tres.set(\"Location\", value.location);\n\t\t\t\t\tres.sendStatus(value.statusCode);\n\t\t\t\t}\n\t\t\t\telse if (value.then && value.constructor['name'] === 'Promise') {\n\t\t\t\t\tlet self = this;\n\t\t\t\t\tvalue.then(function(val) {\n\t\t\t\t\t\tself.sendValue(val, res, next);\n\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres.json(value);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate buildArgumentsList(serviceMethod: metadata.ServiceMethod, context: ServiceContext) {\n\t\tlet result: Array<any> = new Array<any>();\n\n\t\tserviceMethod.parameters.forEach(param => {\n\t\t\tswitch (param.paramType) {\n\t\t\t\tcase metadata.ParamType.path:\n\t\t\t\t\tresult.push(this.convertType(context.request.params[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.query:\n\t\t\t\t\tresult.push(this.convertType(context.request.query[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.header:\n\t\t\t\t\tresult.push(this.convertType(context.request.header(param.name), param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.cookie:\n\t\t\t\t\tresult.push(this.convertType(context.request.cookies[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.body:\n\t\t\t\t\tresult.push(this.convertType(context.request.body, param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.file:\n\t\t\t\t\tlet files : Array<Express.Multer.File> = context.request.files[param.name];\n\t\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\t\tresult.push(files[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.files:\n\t\t\t\t\tresult.push(context.request.files[param.name]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.form:\n\t\t\t\t\tresult.push(this.convertType(context.request.body[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.param:\n\t\t\t\t\tlet paramValue = context.request.body[param.name] ||\n\t\t\t\t\t\t\t\t\t context.request.query[param.name]; \n\t\t\t\t\tresult.push(this.convertType(paramValue, param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context:\n\t\t\t\t\tresult.push(context);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_request:\n\t\t\t\t\tresult.push(context.request);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_response:\n\t\t\t\t\tresult.push(context.response);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_next:\n\t\t\t\t\tresult.push(context.next);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_accept:\n\t\t\t\t\tresult.push(context.accept);\n\t\t\t\t\tbreak;\n\t\t\t\tcase metadata.ParamType.context_accept_language:\n\t\t\t\t\tresult.push(context.language);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(\"Invalid parameter type\");\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate convertType(paramValue: string, paramType: Function): any {\n\t\tlet serializedType = paramType['name'];\n\t\tswitch (serializedType) {\n\t\t\tcase \"Number\":\n\t\t\t\treturn paramValue ? parseFloat(paramValue) : 0;\n\t\t\tcase \"Boolean\":\n\t\t\t\treturn paramValue === 'true';\n\t\t\tdefault:\n\t\t\t\treturn paramValue;\n\t\t}\n\t}\n\n//TODO: \n// Parametros do tipo DTO (@BeanParam). \n// criar tipo de retorno para donwload???\n// controlar cache\n// conditional requests\n// Adicionar anotações para Coleções de recursos e para operações \n// Suportar content-type XML (input e output)\n\tstatic resolveAllPaths() {\n\t\tif (!InternalServer.pathsResolved) {\n\t\t\tInternalServer.paths.clear();\n\t\t\tInternalServer.serverClasses.forEach(classData => {\n\t\t\t\tclassData.methods.forEach(method => {\n\t\t\t\t\tif (!method.resolvedPath) {\n\t\t\t\t\t\tInternalServer.resolveProperties(classData, method);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tInternalServer.pathsResolved = true;\n\t\t}\n\t}\n\n\tstatic getPaths(): Set<string> {\n\t\tInternalServer.resolveAllPaths();\n\t\tlet result = new Set<string>();\n\t\tInternalServer.paths.forEach((value, key)=>{\n\t\t\tresult.add(key);\n\t\t});\n\t\treturn result;\n\t}\n\n\tstatic getHttpMethods(path: string) : Set<HttpMethod>{\n\t\tInternalServer.resolveAllPaths();\n\t\tlet methods : Set<HttpMethod>  = InternalServer.paths.get(path);\n\t\treturn methods || new Set<HttpMethod>();\n\t}\n\n\tprivate static resolveLanguages(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t\tserviceMethod: metadata.ServiceMethod) : void {\n\t\tlet resolvedLanguages = new Array<string>();\n\t\tif (serviceClass.languages) {\n\t\t\tserviceClass.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.languages) {\n\t\t\tserviceMethod.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (resolvedLanguages.length > 0) {\n\t\t\tserviceMethod.resolvedLanguages = resolvedLanguages;\n\t\t}\n\t}\n\n\tprivate static resolveAccepts(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t  serviceMethod: metadata.ServiceMethod) : void {\n\t\tlet resolvedAccepts = new Array<string>();\n\t\tif (serviceClass.accepts) {\n\t\t\tserviceClass.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.accepts) {\n\t\t\tserviceMethod.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (resolvedAccepts.length > 0) {\n\t\t\tserviceMethod.resolvedAccepts = resolvedAccepts;\n\t\t}\n\t}\n\n\tprivate static resolveProperties(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t\t\t serviceMethod: metadata.ServiceMethod) : void {\n\t\tInternalServer.resolveLanguages(serviceClass, serviceMethod);\n\t\tInternalServer.resolveAccepts(serviceClass, serviceMethod);\t\t\n\t\tInternalServer.resolvePath(serviceClass, serviceMethod);\n\t}\n\n\tprivate static resolvePath(serviceClass: metadata.ServiceClass, \n\t\t\t\t\t\t\t   serviceMethod: metadata.ServiceMethod) : void {\n\t\tlet classPath: string = serviceClass.path ? serviceClass.path.trim() : \"\";\n\t\t\n\t\tlet resolvedPath = _.startsWith(classPath,'/') ? classPath : '/' + classPath;\n\t\tif (_.endsWith(resolvedPath, '/')) {\n\t\t\tresolvedPath = resolvedPath.slice(0, resolvedPath.length - 1);\n\t\t}\n\n\t\tif (serviceMethod.path) {\n\t\t\tlet methodPath: string = serviceMethod.path.trim();\n\t\t\tresolvedPath = resolvedPath + (_.startsWith(methodPath, '/') ? methodPath : '/' + methodPath);\n\t\t}\n\n\t\tlet declaredHttpMethods: Set<HttpMethod> = InternalServer.paths.get(resolvedPath);\n\t\tif (!declaredHttpMethods) {\n\t\t\tdeclaredHttpMethods = new Set<HttpMethod>();\n\t\t\tInternalServer.paths.set(resolvedPath, declaredHttpMethods);\n\t\t}\n\t\tif (declaredHttpMethods.has(serviceMethod.httpMethod)) {\n\t\t\tthrow Error(\"Duplicated declaration for path [\" + resolvedPath + \"], method [\" \n\t\t\t\t+ serviceMethod.httpMethod + \"]. \");\n\t\t}\n\t\tdeclaredHttpMethods.add(serviceMethod.httpMethod);\n\t\tserviceMethod.resolvedPath = resolvedPath;\n\t}\n}\n"]}